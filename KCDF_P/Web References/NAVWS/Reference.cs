//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KCDF_P.NAVWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Portals_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Portals")]
    public partial class Portals : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnActivateAcOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEducatBgOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddScholasticSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddWorkplanItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddGranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnActivateGranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegGranteeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGrantManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProjectOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveProfPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteGrantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnValidateSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveToGargetGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDelSchlSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDelWorkplanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditGrantManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFinalSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangeSubmitStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveUniBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckIfActive_GranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnVerifyStudentRegNoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddScholarshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnStudentPasswordResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGranteePasswordResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGrantee_PasswordChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnStudent_PasswordChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachements_ScholarshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddProjObjectiveOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnActivateConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnVerifyConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddConsultantApplicationOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckIfAppliedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachmentConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSubmitConsultAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnValidatSubmitConsultantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConsultantPasswordResetOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnConsultant_PasswordChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteUploadConsultOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachMatrixxOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRetrieveSavedPicOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddProfPicOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnExportBLOBOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSavePersonalBankDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteScholarshipOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddXstingGranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddXstingScholarOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddXstingConsultOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckGranteeProfileUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachReportFormsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFetchNavPictureOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCheckScholarProfileUpdatedOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSumbitScholarshipAppOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCountGrantsNotificationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFullfillTaskOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Portals() {
            this.Url = global::KCDF_P.Properties.Settings.Default.KCDF_P_NAVWS_Portals;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnActivateAcCompletedEventHandler FnActivateAcCompleted;
        
        /// <remarks/>
        public event FnRegisterStudentCompletedEventHandler FnRegisterStudentCompleted;
        
        /// <remarks/>
        public event FnCreateAccountCompletedEventHandler FnCreateAccountCompleted;
        
        /// <remarks/>
        public event FnEducatBgCompletedEventHandler FnEducatBgCompleted;
        
        /// <remarks/>
        public event FnAddRefereeCompletedEventHandler FnAddRefereeCompleted;
        
        /// <remarks/>
        public event FnAddScholasticSupportCompletedEventHandler FnAddScholasticSupportCompleted;
        
        /// <remarks/>
        public event FnAddWorkplanItemCompletedEventHandler FnAddWorkplanItemCompleted;
        
        /// <remarks/>
        public event FnAddGranteeCompletedEventHandler FnAddGranteeCompleted;
        
        /// <remarks/>
        public event FnActivateGranteeCompletedEventHandler FnActivateGranteeCompleted;
        
        /// <remarks/>
        public event FnRegGranteeInfoCompletedEventHandler FnRegGranteeInfoCompleted;
        
        /// <remarks/>
        public event FnAttachmentCompletedEventHandler FnAttachmentCompleted;
        
        /// <remarks/>
        public event FnGrantManagerCompletedEventHandler FnGrantManagerCompleted;
        
        /// <remarks/>
        public event FnProjectOverviewCompletedEventHandler FnProjectOverviewCompleted;
        
        /// <remarks/>
        public event FnDeleteRefereeCompletedEventHandler FnDeleteRefereeCompleted;
        
        /// <remarks/>
        public event FnSaveProfPCompletedEventHandler FnSaveProfPCompleted;
        
        /// <remarks/>
        public event FnDeleteUploadCompletedEventHandler FnDeleteUploadCompleted;
        
        /// <remarks/>
        public event FnDeleteGrantCompletedEventHandler FnDeleteGrantCompleted;
        
        /// <remarks/>
        public event FnDeleteProjectCompletedEventHandler FnDeleteProjectCompleted;
        
        /// <remarks/>
        public event FnValidateSubmissionCompletedEventHandler FnValidateSubmissionCompleted;
        
        /// <remarks/>
        public event FnSaveToGargetGroupCompletedEventHandler FnSaveToGargetGroupCompleted;
        
        /// <remarks/>
        public event FnDelSchlSupportCompletedEventHandler FnDelSchlSupportCompleted;
        
        /// <remarks/>
        public event FnDelWorkplanCompletedEventHandler FnDelWorkplanCompleted;
        
        /// <remarks/>
        public event FnEditProjectCompletedEventHandler FnEditProjectCompleted;
        
        /// <remarks/>
        public event FnEditGrantManagerCompletedEventHandler FnEditGrantManagerCompleted;
        
        /// <remarks/>
        public event FnFinalSubmissionCompletedEventHandler FnFinalSubmissionCompleted;
        
        /// <remarks/>
        public event FnChangeSubmitStatusCompletedEventHandler FnChangeSubmitStatusCompleted;
        
        /// <remarks/>
        public event FnSaveUniBankDetailsCompletedEventHandler FnSaveUniBankDetailsCompleted;
        
        /// <remarks/>
        public event FnCheckIfActive_GranteeCompletedEventHandler FnCheckIfActive_GranteeCompleted;
        
        /// <remarks/>
        public event FnVerifyStudentRegNoCompletedEventHandler FnVerifyStudentRegNoCompleted;
        
        /// <remarks/>
        public event FnAddScholarshipCompletedEventHandler FnAddScholarshipCompleted;
        
        /// <remarks/>
        public event FnStudentPasswordResetCompletedEventHandler FnStudentPasswordResetCompleted;
        
        /// <remarks/>
        public event FnGranteePasswordResetCompletedEventHandler FnGranteePasswordResetCompleted;
        
        /// <remarks/>
        public event FnGrantee_PasswordChangeCompletedEventHandler FnGrantee_PasswordChangeCompleted;
        
        /// <remarks/>
        public event FnStudent_PasswordChangeCompletedEventHandler FnStudent_PasswordChangeCompleted;
        
        /// <remarks/>
        public event FnAttachements_ScholarshipCompletedEventHandler FnAttachements_ScholarshipCompleted;
        
        /// <remarks/>
        public event FnAddProjObjectiveCompletedEventHandler FnAddProjObjectiveCompleted;
        
        /// <remarks/>
        public event FnCreateConsultantCompletedEventHandler FnCreateConsultantCompleted;
        
        /// <remarks/>
        public event FnActivateConsultantCompletedEventHandler FnActivateConsultantCompleted;
        
        /// <remarks/>
        public event FnVerifyConsultantCompletedEventHandler FnVerifyConsultantCompleted;
        
        /// <remarks/>
        public event FnEditConsultantCompletedEventHandler FnEditConsultantCompleted;
        
        /// <remarks/>
        public event FnAddConsultantApplicationCompletedEventHandler FnAddConsultantApplicationCompleted;
        
        /// <remarks/>
        public event FnCheckIfAppliedCompletedEventHandler FnCheckIfAppliedCompleted;
        
        /// <remarks/>
        public event FnAttachmentConsultantCompletedEventHandler FnAttachmentConsultantCompleted;
        
        /// <remarks/>
        public event FnSubmitConsultAppCompletedEventHandler FnSubmitConsultAppCompleted;
        
        /// <remarks/>
        public event FnValidatSubmitConsultantCompletedEventHandler FnValidatSubmitConsultantCompleted;
        
        /// <remarks/>
        public event FnConsultantPasswordResetCompletedEventHandler FnConsultantPasswordResetCompleted;
        
        /// <remarks/>
        public event FnConsultant_PasswordChangeCompletedEventHandler FnConsultant_PasswordChangeCompleted;
        
        /// <remarks/>
        public event FnDeleteUploadConsultCompletedEventHandler FnDeleteUploadConsultCompleted;
        
        /// <remarks/>
        public event FnAttachMatrixxCompletedEventHandler FnAttachMatrixxCompleted;
        
        /// <remarks/>
        public event FnRetrieveSavedPicCompletedEventHandler FnRetrieveSavedPicCompleted;
        
        /// <remarks/>
        public event FnAddProfPicCompletedEventHandler FnAddProfPicCompleted;
        
        /// <remarks/>
        public event FnExportBLOBCompletedEventHandler FnExportBLOBCompleted;
        
        /// <remarks/>
        public event FnSavePersonalBankDetailsCompletedEventHandler FnSavePersonalBankDetailsCompleted;
        
        /// <remarks/>
        public event FnDeleteScholarshipCompletedEventHandler FnDeleteScholarshipCompleted;
        
        /// <remarks/>
        public event FnAddXstingGranteeCompletedEventHandler FnAddXstingGranteeCompleted;
        
        /// <remarks/>
        public event FnAddXstingScholarCompletedEventHandler FnAddXstingScholarCompleted;
        
        /// <remarks/>
        public event FnAddXstingConsultCompletedEventHandler FnAddXstingConsultCompleted;
        
        /// <remarks/>
        public event FnCheckGranteeProfileUpdatedCompletedEventHandler FnCheckGranteeProfileUpdatedCompleted;
        
        /// <remarks/>
        public event FnAttachReportFormsCompletedEventHandler FnAttachReportFormsCompleted;
        
        /// <remarks/>
        public event FnFetchNavPictureCompletedEventHandler FnFetchNavPictureCompleted;
        
        /// <remarks/>
        public event FnCheckScholarProfileUpdatedCompletedEventHandler FnCheckScholarProfileUpdatedCompleted;
        
        /// <remarks/>
        public event FnSumbitScholarshipAppCompletedEventHandler FnSumbitScholarshipAppCompleted;
        
        /// <remarks/>
        public event FnCountGrantsNotificationsCompletedEventHandler FnCountGrantsNotificationsCompleted;
        
        /// <remarks/>
        public event FnFullfillTaskCompletedEventHandler FnFullfillTaskCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnActivateAc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnActivateAc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnActivateAc(string activationCode) {
            object[] results = this.Invoke("FnActivateAc", new object[] {
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnActivateAcAsync(string activationCode) {
            this.FnActivateAcAsync(activationCode, null);
        }
        
        /// <remarks/>
        public void FnActivateAcAsync(string activationCode, object userState) {
            if ((this.FnActivateAcOperationCompleted == null)) {
                this.FnActivateAcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnActivateAcOperationCompleted);
            }
            this.InvokeAsync("FnActivateAc", new object[] {
                        activationCode}, this.FnActivateAcOperationCompleted, userState);
        }
        
        private void OnFnActivateAcOperationCompleted(object arg) {
            if ((this.FnActivateAcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnActivateAcCompleted(this, new FnActivateAcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRegisterStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRegisterStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnRegisterStudent(string fName, string mName, string lName, string iD_Noa46, string residence, string phone_Num, string userName, int gender, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth, string county, string subcounty) {
            object[] results = this.Invoke("FnRegisterStudent", new object[] {
                        fName,
                        mName,
                        lName,
                        iD_Noa46,
                        residence,
                        phone_Num,
                        userName,
                        gender,
                        dateOfBirth,
                        county,
                        subcounty});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegisterStudentAsync(string fName, string mName, string lName, string iD_Noa46, string residence, string phone_Num, string userName, int gender, System.DateTime dateOfBirth, string county, string subcounty) {
            this.FnRegisterStudentAsync(fName, mName, lName, iD_Noa46, residence, phone_Num, userName, gender, dateOfBirth, county, subcounty, null);
        }
        
        /// <remarks/>
        public void FnRegisterStudentAsync(string fName, string mName, string lName, string iD_Noa46, string residence, string phone_Num, string userName, int gender, System.DateTime dateOfBirth, string county, string subcounty, object userState) {
            if ((this.FnRegisterStudentOperationCompleted == null)) {
                this.FnRegisterStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterStudentOperationCompleted);
            }
            this.InvokeAsync("FnRegisterStudent", new object[] {
                        fName,
                        mName,
                        lName,
                        iD_Noa46,
                        residence,
                        phone_Num,
                        userName,
                        gender,
                        dateOfBirth,
                        county,
                        subcounty}, this.FnRegisterStudentOperationCompleted, userState);
        }
        
        private void OnFnRegisterStudentOperationCompleted(object arg) {
            if ((this.FnRegisterStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterStudentCompleted(this, new FnRegisterStudentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCreateAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCreateAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCreateAccount(string first_Name, string middle_Name, string last_Name, string email, string userName, string password, string activation_Code, int gender, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateofBirth, string studentRegNo) {
            object[] results = this.Invoke("FnCreateAccount", new object[] {
                        first_Name,
                        middle_Name,
                        last_Name,
                        email,
                        userName,
                        password,
                        activation_Code,
                        gender,
                        dateofBirth,
                        studentRegNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateAccountAsync(string first_Name, string middle_Name, string last_Name, string email, string userName, string password, string activation_Code, int gender, System.DateTime dateofBirth, string studentRegNo) {
            this.FnCreateAccountAsync(first_Name, middle_Name, last_Name, email, userName, password, activation_Code, gender, dateofBirth, studentRegNo, null);
        }
        
        /// <remarks/>
        public void FnCreateAccountAsync(string first_Name, string middle_Name, string last_Name, string email, string userName, string password, string activation_Code, int gender, System.DateTime dateofBirth, string studentRegNo, object userState) {
            if ((this.FnCreateAccountOperationCompleted == null)) {
                this.FnCreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("FnCreateAccount", new object[] {
                        first_Name,
                        middle_Name,
                        last_Name,
                        email,
                        userName,
                        password,
                        activation_Code,
                        gender,
                        dateofBirth,
                        studentRegNo}, this.FnCreateAccountOperationCompleted, userState);
        }
        
        private void OnFnCreateAccountOperationCompleted(object arg) {
            if ((this.FnCreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateAccountCompleted(this, new FnCreateAccountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEducatBg", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEducatBg_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnEducatBg(string useRname, string primo_sch, string sec_sch, string univCollege, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime yearofAdmn, string yearofStudy, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime yearofCompltn, string parentGuardian_Phone, string parentGuardian_Email, string parentGuardian_Address, string degree, int mymarks, int totalmarks, string myGrade, int educationLevel) {
            object[] results = this.Invoke("FnEducatBg", new object[] {
                        useRname,
                        primo_sch,
                        sec_sch,
                        univCollege,
                        yearofAdmn,
                        yearofStudy,
                        yearofCompltn,
                        parentGuardian_Phone,
                        parentGuardian_Email,
                        parentGuardian_Address,
                        degree,
                        mymarks,
                        totalmarks,
                        myGrade,
                        educationLevel});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnEducatBgAsync(string useRname, string primo_sch, string sec_sch, string univCollege, System.DateTime yearofAdmn, string yearofStudy, System.DateTime yearofCompltn, string parentGuardian_Phone, string parentGuardian_Email, string parentGuardian_Address, string degree, int mymarks, int totalmarks, string myGrade, int educationLevel) {
            this.FnEducatBgAsync(useRname, primo_sch, sec_sch, univCollege, yearofAdmn, yearofStudy, yearofCompltn, parentGuardian_Phone, parentGuardian_Email, parentGuardian_Address, degree, mymarks, totalmarks, myGrade, educationLevel, null);
        }
        
        /// <remarks/>
        public void FnEducatBgAsync(
                    string useRname, 
                    string primo_sch, 
                    string sec_sch, 
                    string univCollege, 
                    System.DateTime yearofAdmn, 
                    string yearofStudy, 
                    System.DateTime yearofCompltn, 
                    string parentGuardian_Phone, 
                    string parentGuardian_Email, 
                    string parentGuardian_Address, 
                    string degree, 
                    int mymarks, 
                    int totalmarks, 
                    string myGrade, 
                    int educationLevel, 
                    object userState) {
            if ((this.FnEducatBgOperationCompleted == null)) {
                this.FnEducatBgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEducatBgOperationCompleted);
            }
            this.InvokeAsync("FnEducatBg", new object[] {
                        useRname,
                        primo_sch,
                        sec_sch,
                        univCollege,
                        yearofAdmn,
                        yearofStudy,
                        yearofCompltn,
                        parentGuardian_Phone,
                        parentGuardian_Email,
                        parentGuardian_Address,
                        degree,
                        mymarks,
                        totalmarks,
                        myGrade,
                        educationLevel}, this.FnEducatBgOperationCompleted, userState);
        }
        
        private void OnFnEducatBgOperationCompleted(object arg) {
            if ((this.FnEducatBgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEducatBgCompleted(this, new FnEducatBgCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddReferee(string userName, string stud_No, string fname, string mname, string lname, string phone_No, string email) {
            this.Invoke("FnAddReferee", new object[] {
                        userName,
                        stud_No,
                        fname,
                        mname,
                        lname,
                        phone_No,
                        email});
        }
        
        /// <remarks/>
        public void FnAddRefereeAsync(string userName, string stud_No, string fname, string mname, string lname, string phone_No, string email) {
            this.FnAddRefereeAsync(userName, stud_No, fname, mname, lname, phone_No, email, null);
        }
        
        /// <remarks/>
        public void FnAddRefereeAsync(string userName, string stud_No, string fname, string mname, string lname, string phone_No, string email, object userState) {
            if ((this.FnAddRefereeOperationCompleted == null)) {
                this.FnAddRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddRefereeOperationCompleted);
            }
            this.InvokeAsync("FnAddReferee", new object[] {
                        userName,
                        stud_No,
                        fname,
                        mname,
                        lname,
                        phone_No,
                        email}, this.FnAddRefereeOperationCompleted, userState);
        }
        
        private void OnFnAddRefereeOperationCompleted(object arg) {
            if ((this.FnAddRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddRefereeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddScholasticSupport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddScholasticSupport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddScholasticSupport(string studentNo, string year_of_Study, string userName, string scholarship_name, decimal tuitionFee, decimal academicFee, decimal upkeepFee, string refNo, string semester, string @class, decimal scholarstic_materials) {
            object[] results = this.Invoke("FnAddScholasticSupport", new object[] {
                        studentNo,
                        year_of_Study,
                        userName,
                        scholarship_name,
                        tuitionFee,
                        academicFee,
                        upkeepFee,
                        refNo,
                        semester,
                        @class,
                        scholarstic_materials});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddScholasticSupportAsync(string studentNo, string year_of_Study, string userName, string scholarship_name, decimal tuitionFee, decimal academicFee, decimal upkeepFee, string refNo, string semester, string @class, decimal scholarstic_materials) {
            this.FnAddScholasticSupportAsync(studentNo, year_of_Study, userName, scholarship_name, tuitionFee, academicFee, upkeepFee, refNo, semester, @class, scholarstic_materials, null);
        }
        
        /// <remarks/>
        public void FnAddScholasticSupportAsync(string studentNo, string year_of_Study, string userName, string scholarship_name, decimal tuitionFee, decimal academicFee, decimal upkeepFee, string refNo, string semester, string @class, decimal scholarstic_materials, object userState) {
            if ((this.FnAddScholasticSupportOperationCompleted == null)) {
                this.FnAddScholasticSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddScholasticSupportOperationCompleted);
            }
            this.InvokeAsync("FnAddScholasticSupport", new object[] {
                        studentNo,
                        year_of_Study,
                        userName,
                        scholarship_name,
                        tuitionFee,
                        academicFee,
                        upkeepFee,
                        refNo,
                        semester,
                        @class,
                        scholarstic_materials}, this.FnAddScholasticSupportOperationCompleted, userState);
        }
        
        private void OnFnAddScholasticSupportOperationCompleted(object arg) {
            if ((this.FnAddScholasticSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddScholasticSupportCompleted(this, new FnAddScholasticSupportCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddWorkplanItem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddWorkplanItem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddWorkplanItem(string userName, string studeNo, string objective, string activity, string activity_target, string means_of_veri, decimal amount, int timeframe, string scolarship_name) {
            this.Invoke("FnAddWorkplanItem", new object[] {
                        userName,
                        studeNo,
                        objective,
                        activity,
                        activity_target,
                        means_of_veri,
                        amount,
                        timeframe,
                        scolarship_name});
        }
        
        /// <remarks/>
        public void FnAddWorkplanItemAsync(string userName, string studeNo, string objective, string activity, string activity_target, string means_of_veri, decimal amount, int timeframe, string scolarship_name) {
            this.FnAddWorkplanItemAsync(userName, studeNo, objective, activity, activity_target, means_of_veri, amount, timeframe, scolarship_name, null);
        }
        
        /// <remarks/>
        public void FnAddWorkplanItemAsync(string userName, string studeNo, string objective, string activity, string activity_target, string means_of_veri, decimal amount, int timeframe, string scolarship_name, object userState) {
            if ((this.FnAddWorkplanItemOperationCompleted == null)) {
                this.FnAddWorkplanItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddWorkplanItemOperationCompleted);
            }
            this.InvokeAsync("FnAddWorkplanItem", new object[] {
                        userName,
                        studeNo,
                        objective,
                        activity,
                        activity_target,
                        means_of_veri,
                        amount,
                        timeframe,
                        scolarship_name}, this.FnAddWorkplanItemOperationCompleted, userState);
        }
        
        private void OnFnAddWorkplanItemOperationCompleted(object arg) {
            if ((this.FnAddWorkplanItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddWorkplanItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddGrantee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddGrantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddGrantee(string orgName, string email, string username, string password, string activ_Code) {
            this.Invoke("FnAddGrantee", new object[] {
                        orgName,
                        email,
                        username,
                        password,
                        activ_Code});
        }
        
        /// <remarks/>
        public void FnAddGranteeAsync(string orgName, string email, string username, string password, string activ_Code) {
            this.FnAddGranteeAsync(orgName, email, username, password, activ_Code, null);
        }
        
        /// <remarks/>
        public void FnAddGranteeAsync(string orgName, string email, string username, string password, string activ_Code, object userState) {
            if ((this.FnAddGranteeOperationCompleted == null)) {
                this.FnAddGranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddGranteeOperationCompleted);
            }
            this.InvokeAsync("FnAddGrantee", new object[] {
                        orgName,
                        email,
                        username,
                        password,
                        activ_Code}, this.FnAddGranteeOperationCompleted, userState);
        }
        
        private void OnFnAddGranteeOperationCompleted(object arg) {
            if ((this.FnAddGranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddGranteeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnActivateGrantee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnActivateGrantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnActivateGrantee(string activationCode) {
            object[] results = this.Invoke("FnActivateGrantee", new object[] {
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnActivateGranteeAsync(string activationCode) {
            this.FnActivateGranteeAsync(activationCode, null);
        }
        
        /// <remarks/>
        public void FnActivateGranteeAsync(string activationCode, object userState) {
            if ((this.FnActivateGranteeOperationCompleted == null)) {
                this.FnActivateGranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnActivateGranteeOperationCompleted);
            }
            this.InvokeAsync("FnActivateGrantee", new object[] {
                        activationCode}, this.FnActivateGranteeOperationCompleted, userState);
        }
        
        private void OnFnActivateGranteeOperationCompleted(object arg) {
            if ((this.FnActivateGranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnActivateGranteeCompleted(this, new FnActivateGranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRegGranteeInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRegGranteeInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnRegGranteeInfo(
                    string username, 
                    string contact_person_name, 
                    string current_position, 
                    string phone_Number, 
                    string postal_address, 
                    string postal_code, 
                    string town, 
                    bool non_governmental, 
                    bool non_partisan, 
                    bool non_profit, 
                    bool legally_registered, 
                    string physical_address, 
                    string type_of_organization, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime reg_Date, 
                    string website, 
                    string company_reg_no, 
                    string nonPartsan_Description) {
            object[] results = this.Invoke("FnRegGranteeInfo", new object[] {
                        username,
                        contact_person_name,
                        current_position,
                        phone_Number,
                        postal_address,
                        postal_code,
                        town,
                        non_governmental,
                        non_partisan,
                        non_profit,
                        legally_registered,
                        physical_address,
                        type_of_organization,
                        reg_Date,
                        website,
                        company_reg_no,
                        nonPartsan_Description});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnRegGranteeInfoAsync(
                    string username, 
                    string contact_person_name, 
                    string current_position, 
                    string phone_Number, 
                    string postal_address, 
                    string postal_code, 
                    string town, 
                    bool non_governmental, 
                    bool non_partisan, 
                    bool non_profit, 
                    bool legally_registered, 
                    string physical_address, 
                    string type_of_organization, 
                    System.DateTime reg_Date, 
                    string website, 
                    string company_reg_no, 
                    string nonPartsan_Description) {
            this.FnRegGranteeInfoAsync(username, contact_person_name, current_position, phone_Number, postal_address, postal_code, town, non_governmental, non_partisan, non_profit, legally_registered, physical_address, type_of_organization, reg_Date, website, company_reg_no, nonPartsan_Description, null);
        }
        
        /// <remarks/>
        public void FnRegGranteeInfoAsync(
                    string username, 
                    string contact_person_name, 
                    string current_position, 
                    string phone_Number, 
                    string postal_address, 
                    string postal_code, 
                    string town, 
                    bool non_governmental, 
                    bool non_partisan, 
                    bool non_profit, 
                    bool legally_registered, 
                    string physical_address, 
                    string type_of_organization, 
                    System.DateTime reg_Date, 
                    string website, 
                    string company_reg_no, 
                    string nonPartsan_Description, 
                    object userState) {
            if ((this.FnRegGranteeInfoOperationCompleted == null)) {
                this.FnRegGranteeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegGranteeInfoOperationCompleted);
            }
            this.InvokeAsync("FnRegGranteeInfo", new object[] {
                        username,
                        contact_person_name,
                        current_position,
                        phone_Number,
                        postal_address,
                        postal_code,
                        town,
                        non_governmental,
                        non_partisan,
                        non_profit,
                        legally_registered,
                        physical_address,
                        type_of_organization,
                        reg_Date,
                        website,
                        company_reg_no,
                        nonPartsan_Description}, this.FnRegGranteeInfoOperationCompleted, userState);
        }
        
        private void OnFnRegGranteeInfoOperationCompleted(object arg) {
            if ((this.FnRegGranteeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegGranteeInfoCompleted(this, new FnRegGranteeInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachment(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached) {
            object[] results = this.Invoke("FnAttachment", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name,
                        callrefNo,
                        attached});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachmentAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached) {
            this.FnAttachmentAsync(user_No, document_type, link, document_name, grant_type, document_kind, userName, project_name, callrefNo, attached, null);
        }
        
        /// <remarks/>
        public void FnAttachmentAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached, object userState) {
            if ((this.FnAttachmentOperationCompleted == null)) {
                this.FnAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachmentOperationCompleted);
            }
            this.InvokeAsync("FnAttachment", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name,
                        callrefNo,
                        attached}, this.FnAttachmentOperationCompleted, userState);
        }
        
        private void OnFnAttachmentOperationCompleted(object arg) {
            if ((this.FnAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachmentCompleted(this, new FnAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGrantManager", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGrantManager_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnGrantManager(string username, string donor_name, decimal amount_provided, string year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, string project_status, string project_refNo, bool kcdfgrantsB4, string project_name) {
            object[] results = this.Invoke("FnGrantManager", new object[] {
                        username,
                        donor_name,
                        amount_provided,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        project_status,
                        project_refNo,
                        kcdfgrantsB4,
                        project_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnGrantManagerAsync(string username, string donor_name, decimal amount_provided, string year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, string project_status, string project_refNo, bool kcdfgrantsB4, string project_name) {
            this.FnGrantManagerAsync(username, donor_name, amount_provided, year_awarded, grant_objective, target_county, target_beneficiary, target_benefs_number, project_status, project_refNo, kcdfgrantsB4, project_name, null);
        }
        
        /// <remarks/>
        public void FnGrantManagerAsync(string username, string donor_name, decimal amount_provided, string year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, string project_status, string project_refNo, bool kcdfgrantsB4, string project_name, object userState) {
            if ((this.FnGrantManagerOperationCompleted == null)) {
                this.FnGrantManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGrantManagerOperationCompleted);
            }
            this.InvokeAsync("FnGrantManager", new object[] {
                        username,
                        donor_name,
                        amount_provided,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        project_status,
                        project_refNo,
                        kcdfgrantsB4,
                        project_name}, this.FnGrantManagerOperationCompleted, userState);
        }
        
        private void OnFnGrantManagerOperationCompleted(object arg) {
            if ((this.FnGrantManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGrantManagerCompleted(this, new FnGrantManagerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnProjectOverview", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnProjectOverview_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnProjectOverview(string username, string counties, string subcounties, string project_title, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_date, string grant_scale, string project_name, string callRefNo, string objective) {
            object[] results = this.Invoke("FnProjectOverview", new object[] {
                        username,
                        counties,
                        subcounties,
                        project_title,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale,
                        project_name,
                        callRefNo,
                        objective});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnProjectOverviewAsync(string username, string counties, string subcounties, string project_title, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale, string project_name, string callRefNo, string objective) {
            this.FnProjectOverviewAsync(username, counties, subcounties, project_title, project_months, total_project_cost, your_cash_contribution, kcdf_amount_requested, start_date, grant_scale, project_name, callRefNo, objective, null);
        }
        
        /// <remarks/>
        public void FnProjectOverviewAsync(string username, string counties, string subcounties, string project_title, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale, string project_name, string callRefNo, string objective, object userState) {
            if ((this.FnProjectOverviewOperationCompleted == null)) {
                this.FnProjectOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProjectOverviewOperationCompleted);
            }
            this.InvokeAsync("FnProjectOverview", new object[] {
                        username,
                        counties,
                        subcounties,
                        project_title,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale,
                        project_name,
                        callRefNo,
                        objective}, this.FnProjectOverviewOperationCompleted, userState);
        }
        
        private void OnFnProjectOverviewOperationCompleted(object arg) {
            if ((this.FnProjectOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProjectOverviewCompleted(this, new FnProjectOverviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnDeleteReferee(string username, string no) {
            object[] results = this.Invoke("FnDeleteReferee", new object[] {
                        username,
                        no});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteRefereeAsync(string username, string no) {
            this.FnDeleteRefereeAsync(username, no, null);
        }
        
        /// <remarks/>
        public void FnDeleteRefereeAsync(string username, string no, object userState) {
            if ((this.FnDeleteRefereeOperationCompleted == null)) {
                this.FnDeleteRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteRefereeOperationCompleted);
            }
            this.InvokeAsync("FnDeleteReferee", new object[] {
                        username,
                        no}, this.FnDeleteRefereeOperationCompleted, userState);
        }
        
        private void OnFnDeleteRefereeOperationCompleted(object arg) {
            if ((this.FnDeleteRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteRefereeCompleted(this, new FnDeleteRefereeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSaveProfP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSaveProfP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSaveProfP(string username, string link, string filename) {
            this.Invoke("FnSaveProfP", new object[] {
                        username,
                        link,
                        filename});
        }
        
        /// <remarks/>
        public void FnSaveProfPAsync(string username, string link, string filename) {
            this.FnSaveProfPAsync(username, link, filename, null);
        }
        
        /// <remarks/>
        public void FnSaveProfPAsync(string username, string link, string filename, object userState) {
            if ((this.FnSaveProfPOperationCompleted == null)) {
                this.FnSaveProfPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveProfPOperationCompleted);
            }
            this.InvokeAsync("FnSaveProfP", new object[] {
                        username,
                        link,
                        filename}, this.FnSaveProfPOperationCompleted, userState);
        }
        
        private void OnFnSaveProfPOperationCompleted(object arg) {
            if ((this.FnSaveProfPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveProfPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteUpload", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteUpload_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnDeleteUpload(string iD) {
            object[] results = this.Invoke("FnDeleteUpload", new object[] {
                        iD});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteUploadAsync(string iD) {
            this.FnDeleteUploadAsync(iD, null);
        }
        
        /// <remarks/>
        public void FnDeleteUploadAsync(string iD, object userState) {
            if ((this.FnDeleteUploadOperationCompleted == null)) {
                this.FnDeleteUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteUploadOperationCompleted);
            }
            this.InvokeAsync("FnDeleteUpload", new object[] {
                        iD}, this.FnDeleteUploadOperationCompleted, userState);
        }
        
        private void OnFnDeleteUploadOperationCompleted(object arg) {
            if ((this.FnDeleteUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteUploadCompleted(this, new FnDeleteUploadCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteGrant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteGrant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteGrant(string code) {
            this.Invoke("FnDeleteGrant", new object[] {
                        code});
        }
        
        /// <remarks/>
        public void FnDeleteGrantAsync(string code) {
            this.FnDeleteGrantAsync(code, null);
        }
        
        /// <remarks/>
        public void FnDeleteGrantAsync(string code, object userState) {
            if ((this.FnDeleteGrantOperationCompleted == null)) {
                this.FnDeleteGrantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteGrantOperationCompleted);
            }
            this.InvokeAsync("FnDeleteGrant", new object[] {
                        code}, this.FnDeleteGrantOperationCompleted, userState);
        }
        
        private void OnFnDeleteGrantOperationCompleted(object arg) {
            if ((this.FnDeleteGrantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteGrantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteProject", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteProject_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteProject(string code) {
            this.Invoke("FnDeleteProject", new object[] {
                        code});
        }
        
        /// <remarks/>
        public void FnDeleteProjectAsync(string code) {
            this.FnDeleteProjectAsync(code, null);
        }
        
        /// <remarks/>
        public void FnDeleteProjectAsync(string code, object userState) {
            if ((this.FnDeleteProjectOperationCompleted == null)) {
                this.FnDeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("FnDeleteProject", new object[] {
                        code}, this.FnDeleteProjectOperationCompleted, userState);
        }
        
        private void OnFnDeleteProjectOperationCompleted(object arg) {
            if ((this.FnDeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnValidateSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnValidateSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnValidateSubmission(string username, string project_number) {
            object[] results = this.Invoke("FnValidateSubmission", new object[] {
                        username,
                        project_number});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnValidateSubmissionAsync(string username, string project_number) {
            this.FnValidateSubmissionAsync(username, project_number, null);
        }
        
        /// <remarks/>
        public void FnValidateSubmissionAsync(string username, string project_number, object userState) {
            if ((this.FnValidateSubmissionOperationCompleted == null)) {
                this.FnValidateSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnValidateSubmissionOperationCompleted);
            }
            this.InvokeAsync("FnValidateSubmission", new object[] {
                        username,
                        project_number}, this.FnValidateSubmissionOperationCompleted, userState);
        }
        
        private void OnFnValidateSubmissionOperationCompleted(object arg) {
            if ((this.FnValidateSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnValidateSubmissionCompleted(this, new FnValidateSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSaveToGargetGroup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSaveToGargetGroup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSaveToGargetGroup(
                    string username, 
                    int households, 
                    int schools, 
                    string organization, 
                    int youth, 
                    int women, 
                    int men, 
                    int childold, 
                    int old, 
                    int children, 
                    int orphan, 
                    int illness, 
                    int marginalised, 
                    int drug, 
                    int sexworker, 
                    int teacher, 
                    int farmer, 
                    string project_name, 
                    string refNo) {
            object[] results = this.Invoke("FnSaveToGargetGroup", new object[] {
                        username,
                        households,
                        schools,
                        organization,
                        youth,
                        women,
                        men,
                        childold,
                        old,
                        children,
                        orphan,
                        illness,
                        marginalised,
                        drug,
                        sexworker,
                        teacher,
                        farmer,
                        project_name,
                        refNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveToGargetGroupAsync(
                    string username, 
                    int households, 
                    int schools, 
                    string organization, 
                    int youth, 
                    int women, 
                    int men, 
                    int childold, 
                    int old, 
                    int children, 
                    int orphan, 
                    int illness, 
                    int marginalised, 
                    int drug, 
                    int sexworker, 
                    int teacher, 
                    int farmer, 
                    string project_name, 
                    string refNo) {
            this.FnSaveToGargetGroupAsync(username, households, schools, organization, youth, women, men, childold, old, children, orphan, illness, marginalised, drug, sexworker, teacher, farmer, project_name, refNo, null);
        }
        
        /// <remarks/>
        public void FnSaveToGargetGroupAsync(
                    string username, 
                    int households, 
                    int schools, 
                    string organization, 
                    int youth, 
                    int women, 
                    int men, 
                    int childold, 
                    int old, 
                    int children, 
                    int orphan, 
                    int illness, 
                    int marginalised, 
                    int drug, 
                    int sexworker, 
                    int teacher, 
                    int farmer, 
                    string project_name, 
                    string refNo, 
                    object userState) {
            if ((this.FnSaveToGargetGroupOperationCompleted == null)) {
                this.FnSaveToGargetGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveToGargetGroupOperationCompleted);
            }
            this.InvokeAsync("FnSaveToGargetGroup", new object[] {
                        username,
                        households,
                        schools,
                        organization,
                        youth,
                        women,
                        men,
                        childold,
                        old,
                        children,
                        orphan,
                        illness,
                        marginalised,
                        drug,
                        sexworker,
                        teacher,
                        farmer,
                        project_name,
                        refNo}, this.FnSaveToGargetGroupOperationCompleted, userState);
        }
        
        private void OnFnSaveToGargetGroupOperationCompleted(object arg) {
            if ((this.FnSaveToGargetGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveToGargetGroupCompleted(this, new FnSaveToGargetGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDelSchlSupport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDelSchlSupport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDelSchlSupport(string scholarship_Number) {
            this.Invoke("FnDelSchlSupport", new object[] {
                        scholarship_Number});
        }
        
        /// <remarks/>
        public void FnDelSchlSupportAsync(string scholarship_Number) {
            this.FnDelSchlSupportAsync(scholarship_Number, null);
        }
        
        /// <remarks/>
        public void FnDelSchlSupportAsync(string scholarship_Number, object userState) {
            if ((this.FnDelSchlSupportOperationCompleted == null)) {
                this.FnDelSchlSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDelSchlSupportOperationCompleted);
            }
            this.InvokeAsync("FnDelSchlSupport", new object[] {
                        scholarship_Number}, this.FnDelSchlSupportOperationCompleted, userState);
        }
        
        private void OnFnDelSchlSupportOperationCompleted(object arg) {
            if ((this.FnDelSchlSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDelSchlSupportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDelWorkplan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDelWorkplan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDelWorkplan(string workplan_number) {
            this.Invoke("FnDelWorkplan", new object[] {
                        workplan_number});
        }
        
        /// <remarks/>
        public void FnDelWorkplanAsync(string workplan_number) {
            this.FnDelWorkplanAsync(workplan_number, null);
        }
        
        /// <remarks/>
        public void FnDelWorkplanAsync(string workplan_number, object userState) {
            if ((this.FnDelWorkplanOperationCompleted == null)) {
                this.FnDelWorkplanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDelWorkplanOperationCompleted);
            }
            this.InvokeAsync("FnDelWorkplan", new object[] {
                        workplan_number}, this.FnDelWorkplanOperationCompleted, userState);
        }
        
        private void OnFnDelWorkplanOperationCompleted(object arg) {
            if ((this.FnDelWorkplanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDelWorkplanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditProject", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditProject_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEditProject(string project_number, string counties, string subcounties, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_date, string grant_scale) {
            this.Invoke("FnEditProject", new object[] {
                        project_number,
                        counties,
                        subcounties,
                        target_geog_area,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale});
        }
        
        /// <remarks/>
        public void FnEditProjectAsync(string project_number, string counties, string subcounties, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale) {
            this.FnEditProjectAsync(project_number, counties, subcounties, target_geog_area, project_months, total_project_cost, your_cash_contribution, kcdf_amount_requested, start_date, grant_scale, null);
        }
        
        /// <remarks/>
        public void FnEditProjectAsync(string project_number, string counties, string subcounties, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale, object userState) {
            if ((this.FnEditProjectOperationCompleted == null)) {
                this.FnEditProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditProjectOperationCompleted);
            }
            this.InvokeAsync("FnEditProject", new object[] {
                        project_number,
                        counties,
                        subcounties,
                        target_geog_area,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale}, this.FnEditProjectOperationCompleted, userState);
        }
        
        private void OnFnEditProjectOperationCompleted(object arg) {
            if ((this.FnEditProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditGrantManager", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditGrantManager_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEditGrantManager(string project_number, string username, string donor_name, string year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, decimal amount_received, string project_status, string project_name) {
            this.Invoke("FnEditGrantManager", new object[] {
                        project_number,
                        username,
                        donor_name,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        amount_received,
                        project_status,
                        project_name});
        }
        
        /// <remarks/>
        public void FnEditGrantManagerAsync(string project_number, string username, string donor_name, string year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, decimal amount_received, string project_status, string project_name) {
            this.FnEditGrantManagerAsync(project_number, username, donor_name, year_awarded, grant_objective, target_county, target_beneficiary, target_benefs_number, amount_received, project_status, project_name, null);
        }
        
        /// <remarks/>
        public void FnEditGrantManagerAsync(string project_number, string username, string donor_name, string year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, decimal amount_received, string project_status, string project_name, object userState) {
            if ((this.FnEditGrantManagerOperationCompleted == null)) {
                this.FnEditGrantManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditGrantManagerOperationCompleted);
            }
            this.InvokeAsync("FnEditGrantManager", new object[] {
                        project_number,
                        username,
                        donor_name,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        amount_received,
                        project_status,
                        project_name}, this.FnEditGrantManagerOperationCompleted, userState);
        }
        
        private void OnFnEditGrantManagerOperationCompleted(object arg) {
            if ((this.FnEditGrantManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditGrantManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnFinalSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnFinalSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnFinalSubmission(string username, string proj_refNo) {
            object[] results = this.Invoke("FnFinalSubmission", new object[] {
                        username,
                        proj_refNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnFinalSubmissionAsync(string username, string proj_refNo) {
            this.FnFinalSubmissionAsync(username, proj_refNo, null);
        }
        
        /// <remarks/>
        public void FnFinalSubmissionAsync(string username, string proj_refNo, object userState) {
            if ((this.FnFinalSubmissionOperationCompleted == null)) {
                this.FnFinalSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFinalSubmissionOperationCompleted);
            }
            this.InvokeAsync("FnFinalSubmission", new object[] {
                        username,
                        proj_refNo}, this.FnFinalSubmissionOperationCompleted, userState);
        }
        
        private void OnFnFinalSubmissionOperationCompleted(object arg) {
            if ((this.FnFinalSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFinalSubmissionCompleted(this, new FnFinalSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnChangeSubmitStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnChangeSubmitStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnChangeSubmitStatus(string projectRefNo, string orgUsername) {
            this.Invoke("FnChangeSubmitStatus", new object[] {
                        projectRefNo,
                        orgUsername});
        }
        
        /// <remarks/>
        public void FnChangeSubmitStatusAsync(string projectRefNo, string orgUsername) {
            this.FnChangeSubmitStatusAsync(projectRefNo, orgUsername, null);
        }
        
        /// <remarks/>
        public void FnChangeSubmitStatusAsync(string projectRefNo, string orgUsername, object userState) {
            if ((this.FnChangeSubmitStatusOperationCompleted == null)) {
                this.FnChangeSubmitStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangeSubmitStatusOperationCompleted);
            }
            this.InvokeAsync("FnChangeSubmitStatus", new object[] {
                        projectRefNo,
                        orgUsername}, this.FnChangeSubmitStatusOperationCompleted, userState);
        }
        
        private void OnFnChangeSubmitStatusOperationCompleted(object arg) {
            if ((this.FnChangeSubmitStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangeSubmitStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSaveUniBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSaveUniBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSaveUniBankDetails(string university_name, string university_bank_name, string university_bank_branch, string student_username, string university_account_no, string students_idno, string account_name) {
            object[] results = this.Invoke("FnSaveUniBankDetails", new object[] {
                        university_name,
                        university_bank_name,
                        university_bank_branch,
                        student_username,
                        university_account_no,
                        students_idno,
                        account_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSaveUniBankDetailsAsync(string university_name, string university_bank_name, string university_bank_branch, string student_username, string university_account_no, string students_idno, string account_name) {
            this.FnSaveUniBankDetailsAsync(university_name, university_bank_name, university_bank_branch, student_username, university_account_no, students_idno, account_name, null);
        }
        
        /// <remarks/>
        public void FnSaveUniBankDetailsAsync(string university_name, string university_bank_name, string university_bank_branch, string student_username, string university_account_no, string students_idno, string account_name, object userState) {
            if ((this.FnSaveUniBankDetailsOperationCompleted == null)) {
                this.FnSaveUniBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveUniBankDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSaveUniBankDetails", new object[] {
                        university_name,
                        university_bank_name,
                        university_bank_branch,
                        student_username,
                        university_account_no,
                        students_idno,
                        account_name}, this.FnSaveUniBankDetailsOperationCompleted, userState);
        }
        
        private void OnFnSaveUniBankDetailsOperationCompleted(object arg) {
            if ((this.FnSaveUniBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveUniBankDetailsCompleted(this, new FnSaveUniBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCheckIfActive_Grantee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCheckIfActive_Grantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCheckIfActive_Grantee(string userName) {
            object[] results = this.Invoke("FnCheckIfActive_Grantee", new object[] {
                        userName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckIfActive_GranteeAsync(string userName) {
            this.FnCheckIfActive_GranteeAsync(userName, null);
        }
        
        /// <remarks/>
        public void FnCheckIfActive_GranteeAsync(string userName, object userState) {
            if ((this.FnCheckIfActive_GranteeOperationCompleted == null)) {
                this.FnCheckIfActive_GranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckIfActive_GranteeOperationCompleted);
            }
            this.InvokeAsync("FnCheckIfActive_Grantee", new object[] {
                        userName}, this.FnCheckIfActive_GranteeOperationCompleted, userState);
        }
        
        private void OnFnCheckIfActive_GranteeOperationCompleted(object arg) {
            if ((this.FnCheckIfActive_GranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckIfActive_GranteeCompleted(this, new FnCheckIfActive_GranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnVerifyStudentRegNo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnVerifyStudentRegNo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnVerifyStudentRegNo(string admission_Number) {
            object[] results = this.Invoke("FnVerifyStudentRegNo", new object[] {
                        admission_Number});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnVerifyStudentRegNoAsync(string admission_Number) {
            this.FnVerifyStudentRegNoAsync(admission_Number, null);
        }
        
        /// <remarks/>
        public void FnVerifyStudentRegNoAsync(string admission_Number, object userState) {
            if ((this.FnVerifyStudentRegNoOperationCompleted == null)) {
                this.FnVerifyStudentRegNoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnVerifyStudentRegNoOperationCompleted);
            }
            this.InvokeAsync("FnVerifyStudentRegNo", new object[] {
                        admission_Number}, this.FnVerifyStudentRegNoOperationCompleted, userState);
        }
        
        private void OnFnVerifyStudentRegNoOperationCompleted(object arg) {
            if ((this.FnVerifyStudentRegNoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnVerifyStudentRegNoCompleted(this, new FnVerifyStudentRegNoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddScholarship", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddScholarship_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddScholarship(string scholarship_RefNo, string admn_or_IDNo, string applicant_FullName, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime year_of_Application, string applicants_College, string username, decimal scholarship_budget, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime required_date) {
            object[] results = this.Invoke("FnAddScholarship", new object[] {
                        scholarship_RefNo,
                        admn_or_IDNo,
                        applicant_FullName,
                        year_of_Application,
                        applicants_College,
                        username,
                        scholarship_budget,
                        required_date});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddScholarshipAsync(string scholarship_RefNo, string admn_or_IDNo, string applicant_FullName, System.DateTime year_of_Application, string applicants_College, string username, decimal scholarship_budget, System.DateTime required_date) {
            this.FnAddScholarshipAsync(scholarship_RefNo, admn_or_IDNo, applicant_FullName, year_of_Application, applicants_College, username, scholarship_budget, required_date, null);
        }
        
        /// <remarks/>
        public void FnAddScholarshipAsync(string scholarship_RefNo, string admn_or_IDNo, string applicant_FullName, System.DateTime year_of_Application, string applicants_College, string username, decimal scholarship_budget, System.DateTime required_date, object userState) {
            if ((this.FnAddScholarshipOperationCompleted == null)) {
                this.FnAddScholarshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddScholarshipOperationCompleted);
            }
            this.InvokeAsync("FnAddScholarship", new object[] {
                        scholarship_RefNo,
                        admn_or_IDNo,
                        applicant_FullName,
                        year_of_Application,
                        applicants_College,
                        username,
                        scholarship_budget,
                        required_date}, this.FnAddScholarshipOperationCompleted, userState);
        }
        
        private void OnFnAddScholarshipOperationCompleted(object arg) {
            if ((this.FnAddScholarshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddScholarshipCompleted(this, new FnAddScholarshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnStudentPasswordReset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnStudentPasswordReset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnStudentPasswordReset(string myUsername, string newPassword) {
            object[] results = this.Invoke("FnStudentPasswordReset", new object[] {
                        myUsername,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnStudentPasswordResetAsync(string myUsername, string newPassword) {
            this.FnStudentPasswordResetAsync(myUsername, newPassword, null);
        }
        
        /// <remarks/>
        public void FnStudentPasswordResetAsync(string myUsername, string newPassword, object userState) {
            if ((this.FnStudentPasswordResetOperationCompleted == null)) {
                this.FnStudentPasswordResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnStudentPasswordResetOperationCompleted);
            }
            this.InvokeAsync("FnStudentPasswordReset", new object[] {
                        myUsername,
                        newPassword}, this.FnStudentPasswordResetOperationCompleted, userState);
        }
        
        private void OnFnStudentPasswordResetOperationCompleted(object arg) {
            if ((this.FnStudentPasswordResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnStudentPasswordResetCompleted(this, new FnStudentPasswordResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGranteePasswordReset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGranteePasswordReset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGranteePasswordReset(string myOrgUsername, string newPassword) {
            object[] results = this.Invoke("FnGranteePasswordReset", new object[] {
                        myOrgUsername,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGranteePasswordResetAsync(string myOrgUsername, string newPassword) {
            this.FnGranteePasswordResetAsync(myOrgUsername, newPassword, null);
        }
        
        /// <remarks/>
        public void FnGranteePasswordResetAsync(string myOrgUsername, string newPassword, object userState) {
            if ((this.FnGranteePasswordResetOperationCompleted == null)) {
                this.FnGranteePasswordResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGranteePasswordResetOperationCompleted);
            }
            this.InvokeAsync("FnGranteePasswordReset", new object[] {
                        myOrgUsername,
                        newPassword}, this.FnGranteePasswordResetOperationCompleted, userState);
        }
        
        private void OnFnGranteePasswordResetOperationCompleted(object arg) {
            if ((this.FnGranteePasswordResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGranteePasswordResetCompleted(this, new FnGranteePasswordResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGrantee_PasswordChange", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGrantee_PasswordChange_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnGrantee_PasswordChange(string userName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("FnGrantee_PasswordChange", new object[] {
                        userName,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnGrantee_PasswordChangeAsync(string userName, string oldPassword, string newPassword) {
            this.FnGrantee_PasswordChangeAsync(userName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void FnGrantee_PasswordChangeAsync(string userName, string oldPassword, string newPassword, object userState) {
            if ((this.FnGrantee_PasswordChangeOperationCompleted == null)) {
                this.FnGrantee_PasswordChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGrantee_PasswordChangeOperationCompleted);
            }
            this.InvokeAsync("FnGrantee_PasswordChange", new object[] {
                        userName,
                        oldPassword,
                        newPassword}, this.FnGrantee_PasswordChangeOperationCompleted, userState);
        }
        
        private void OnFnGrantee_PasswordChangeOperationCompleted(object arg) {
            if ((this.FnGrantee_PasswordChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGrantee_PasswordChangeCompleted(this, new FnGrantee_PasswordChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnStudent_PasswordChange", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnStudent_PasswordChange_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnStudent_PasswordChange(string userName, string oldPassword, string newPasswordIs) {
            object[] results = this.Invoke("FnStudent_PasswordChange", new object[] {
                        userName,
                        oldPassword,
                        newPasswordIs});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnStudent_PasswordChangeAsync(string userName, string oldPassword, string newPasswordIs) {
            this.FnStudent_PasswordChangeAsync(userName, oldPassword, newPasswordIs, null);
        }
        
        /// <remarks/>
        public void FnStudent_PasswordChangeAsync(string userName, string oldPassword, string newPasswordIs, object userState) {
            if ((this.FnStudent_PasswordChangeOperationCompleted == null)) {
                this.FnStudent_PasswordChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnStudent_PasswordChangeOperationCompleted);
            }
            this.InvokeAsync("FnStudent_PasswordChange", new object[] {
                        userName,
                        oldPassword,
                        newPasswordIs}, this.FnStudent_PasswordChangeOperationCompleted, userState);
        }
        
        private void OnFnStudent_PasswordChangeOperationCompleted(object arg) {
            if ((this.FnStudent_PasswordChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnStudent_PasswordChangeCompleted(this, new FnStudent_PasswordChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAttachements_Scholarship", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAttachements_Scholarship_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachements_Scholarship(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string scholarship_name, string scholarshipRefNo, string attached) {
            object[] results = this.Invoke("FnAttachements_Scholarship", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        scholarship_name,
                        scholarshipRefNo,
                        attached});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachements_ScholarshipAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string scholarship_name, string scholarshipRefNo, string attached) {
            this.FnAttachements_ScholarshipAsync(user_No, document_type, link, document_name, grant_type, document_kind, userName, scholarship_name, scholarshipRefNo, attached, null);
        }
        
        /// <remarks/>
        public void FnAttachements_ScholarshipAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string scholarship_name, string scholarshipRefNo, string attached, object userState) {
            if ((this.FnAttachements_ScholarshipOperationCompleted == null)) {
                this.FnAttachements_ScholarshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachements_ScholarshipOperationCompleted);
            }
            this.InvokeAsync("FnAttachements_Scholarship", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        scholarship_name,
                        scholarshipRefNo,
                        attached}, this.FnAttachements_ScholarshipOperationCompleted, userState);
        }
        
        private void OnFnAttachements_ScholarshipOperationCompleted(object arg) {
            if ((this.FnAttachements_ScholarshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachements_ScholarshipCompleted(this, new FnAttachements_ScholarshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddProjObjective", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddProjObjective_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddProjObjective(string userName, string projectName, string _Objectives, string _RefNo) {
            object[] results = this.Invoke("FnAddProjObjective", new object[] {
                        userName,
                        projectName,
                        _Objectives,
                        _RefNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddProjObjectiveAsync(string userName, string projectName, string _Objectives, string _RefNo) {
            this.FnAddProjObjectiveAsync(userName, projectName, _Objectives, _RefNo, null);
        }
        
        /// <remarks/>
        public void FnAddProjObjectiveAsync(string userName, string projectName, string _Objectives, string _RefNo, object userState) {
            if ((this.FnAddProjObjectiveOperationCompleted == null)) {
                this.FnAddProjObjectiveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddProjObjectiveOperationCompleted);
            }
            this.InvokeAsync("FnAddProjObjective", new object[] {
                        userName,
                        projectName,
                        _Objectives,
                        _RefNo}, this.FnAddProjObjectiveOperationCompleted, userState);
        }
        
        private void OnFnAddProjObjectiveOperationCompleted(object arg) {
            if ((this.FnAddProjObjectiveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddProjObjectiveCompleted(this, new FnAddProjObjectiveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCreateConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCreateConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCreateConsultant(string fullName, string email, string regIDNo, string username, string password, string activationCode) {
            object[] results = this.Invoke("FnCreateConsultant", new object[] {
                        fullName,
                        email,
                        regIDNo,
                        username,
                        password,
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateConsultantAsync(string fullName, string email, string regIDNo, string username, string password, string activationCode) {
            this.FnCreateConsultantAsync(fullName, email, regIDNo, username, password, activationCode, null);
        }
        
        /// <remarks/>
        public void FnCreateConsultantAsync(string fullName, string email, string regIDNo, string username, string password, string activationCode, object userState) {
            if ((this.FnCreateConsultantOperationCompleted == null)) {
                this.FnCreateConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateConsultantOperationCompleted);
            }
            this.InvokeAsync("FnCreateConsultant", new object[] {
                        fullName,
                        email,
                        regIDNo,
                        username,
                        password,
                        activationCode}, this.FnCreateConsultantOperationCompleted, userState);
        }
        
        private void OnFnCreateConsultantOperationCompleted(object arg) {
            if ((this.FnCreateConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateConsultantCompleted(this, new FnCreateConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnActivateConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnActivateConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnActivateConsultant(string activation_Code) {
            object[] results = this.Invoke("FnActivateConsultant", new object[] {
                        activation_Code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnActivateConsultantAsync(string activation_Code) {
            this.FnActivateConsultantAsync(activation_Code, null);
        }
        
        /// <remarks/>
        public void FnActivateConsultantAsync(string activation_Code, object userState) {
            if ((this.FnActivateConsultantOperationCompleted == null)) {
                this.FnActivateConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnActivateConsultantOperationCompleted);
            }
            this.InvokeAsync("FnActivateConsultant", new object[] {
                        activation_Code}, this.FnActivateConsultantOperationCompleted, userState);
        }
        
        private void OnFnActivateConsultantOperationCompleted(object arg) {
            if ((this.FnActivateConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnActivateConsultantCompleted(this, new FnActivateConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnVerifyConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnVerifyConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnVerifyConsultant(string regIDNumber) {
            object[] results = this.Invoke("FnVerifyConsultant", new object[] {
                        regIDNumber});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnVerifyConsultantAsync(string regIDNumber) {
            this.FnVerifyConsultantAsync(regIDNumber, null);
        }
        
        /// <remarks/>
        public void FnVerifyConsultantAsync(string regIDNumber, object userState) {
            if ((this.FnVerifyConsultantOperationCompleted == null)) {
                this.FnVerifyConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnVerifyConsultantOperationCompleted);
            }
            this.InvokeAsync("FnVerifyConsultant", new object[] {
                        regIDNumber}, this.FnVerifyConsultantOperationCompleted, userState);
        }
        
        private void OnFnVerifyConsultantOperationCompleted(object arg) {
            if ((this.FnVerifyConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnVerifyConsultantCompleted(this, new FnVerifyConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnEditConsultant(string username, string regIDNo, string phone_Number, string nameOfContactPerson, string positionofContatPerson, string postalcode, string postatown, string postaladdress, bool consultedB4, int statusofProject, string website) {
            object[] results = this.Invoke("FnEditConsultant", new object[] {
                        username,
                        regIDNo,
                        phone_Number,
                        nameOfContactPerson,
                        positionofContatPerson,
                        postalcode,
                        postatown,
                        postaladdress,
                        consultedB4,
                        statusofProject,
                        website});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnEditConsultantAsync(string username, string regIDNo, string phone_Number, string nameOfContactPerson, string positionofContatPerson, string postalcode, string postatown, string postaladdress, bool consultedB4, int statusofProject, string website) {
            this.FnEditConsultantAsync(username, regIDNo, phone_Number, nameOfContactPerson, positionofContatPerson, postalcode, postatown, postaladdress, consultedB4, statusofProject, website, null);
        }
        
        /// <remarks/>
        public void FnEditConsultantAsync(string username, string regIDNo, string phone_Number, string nameOfContactPerson, string positionofContatPerson, string postalcode, string postatown, string postaladdress, bool consultedB4, int statusofProject, string website, object userState) {
            if ((this.FnEditConsultantOperationCompleted == null)) {
                this.FnEditConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditConsultantOperationCompleted);
            }
            this.InvokeAsync("FnEditConsultant", new object[] {
                        username,
                        regIDNo,
                        phone_Number,
                        nameOfContactPerson,
                        positionofContatPerson,
                        postalcode,
                        postatown,
                        postaladdress,
                        consultedB4,
                        statusofProject,
                        website}, this.FnEditConsultantOperationCompleted, userState);
        }
        
        private void OnFnEditConsultantOperationCompleted(object arg) {
            if ((this.FnEditConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditConsultantCompleted(this, new FnEditConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddConsultantApplication", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddConsultantApplication_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddConsultantApplication(string username, string regIdNo, string consult_project_name, string consult_projectRefNo) {
            object[] results = this.Invoke("FnAddConsultantApplication", new object[] {
                        username,
                        regIdNo,
                        consult_project_name,
                        consult_projectRefNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddConsultantApplicationAsync(string username, string regIdNo, string consult_project_name, string consult_projectRefNo) {
            this.FnAddConsultantApplicationAsync(username, regIdNo, consult_project_name, consult_projectRefNo, null);
        }
        
        /// <remarks/>
        public void FnAddConsultantApplicationAsync(string username, string regIdNo, string consult_project_name, string consult_projectRefNo, object userState) {
            if ((this.FnAddConsultantApplicationOperationCompleted == null)) {
                this.FnAddConsultantApplicationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddConsultantApplicationOperationCompleted);
            }
            this.InvokeAsync("FnAddConsultantApplication", new object[] {
                        username,
                        regIdNo,
                        consult_project_name,
                        consult_projectRefNo}, this.FnAddConsultantApplicationOperationCompleted, userState);
        }
        
        private void OnFnAddConsultantApplicationOperationCompleted(object arg) {
            if ((this.FnAddConsultantApplicationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddConsultantApplicationCompleted(this, new FnAddConsultantApplicationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCheckIfApplied", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCheckIfApplied_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCheckIfApplied(string username, string refNo) {
            object[] results = this.Invoke("FnCheckIfApplied", new object[] {
                        username,
                        refNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckIfAppliedAsync(string username, string refNo) {
            this.FnCheckIfAppliedAsync(username, refNo, null);
        }
        
        /// <remarks/>
        public void FnCheckIfAppliedAsync(string username, string refNo, object userState) {
            if ((this.FnCheckIfAppliedOperationCompleted == null)) {
                this.FnCheckIfAppliedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckIfAppliedOperationCompleted);
            }
            this.InvokeAsync("FnCheckIfApplied", new object[] {
                        username,
                        refNo}, this.FnCheckIfAppliedOperationCompleted, userState);
        }
        
        private void OnFnCheckIfAppliedOperationCompleted(object arg) {
            if ((this.FnCheckIfAppliedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckIfAppliedCompleted(this, new FnCheckIfAppliedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAttachmentConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAttachmentConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachmentConsultant(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached) {
            object[] results = this.Invoke("FnAttachmentConsultant", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name,
                        callrefNo,
                        attached});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachmentConsultantAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached) {
            this.FnAttachmentConsultantAsync(user_No, document_type, link, document_name, grant_type, document_kind, userName, project_name, callrefNo, attached, null);
        }
        
        /// <remarks/>
        public void FnAttachmentConsultantAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached, object userState) {
            if ((this.FnAttachmentConsultantOperationCompleted == null)) {
                this.FnAttachmentConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachmentConsultantOperationCompleted);
            }
            this.InvokeAsync("FnAttachmentConsultant", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name,
                        callrefNo,
                        attached}, this.FnAttachmentConsultantOperationCompleted, userState);
        }
        
        private void OnFnAttachmentConsultantOperationCompleted(object arg) {
            if ((this.FnAttachmentConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachmentConsultantCompleted(this, new FnAttachmentConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSubmitConsultApp", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSubmitConsultApp_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSubmitConsultApp(string username, string entryNo) {
            object[] results = this.Invoke("FnSubmitConsultApp", new object[] {
                        username,
                        entryNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSubmitConsultAppAsync(string username, string entryNo) {
            this.FnSubmitConsultAppAsync(username, entryNo, null);
        }
        
        /// <remarks/>
        public void FnSubmitConsultAppAsync(string username, string entryNo, object userState) {
            if ((this.FnSubmitConsultAppOperationCompleted == null)) {
                this.FnSubmitConsultAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSubmitConsultAppOperationCompleted);
            }
            this.InvokeAsync("FnSubmitConsultApp", new object[] {
                        username,
                        entryNo}, this.FnSubmitConsultAppOperationCompleted, userState);
        }
        
        private void OnFnSubmitConsultAppOperationCompleted(object arg) {
            if ((this.FnSubmitConsultAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSubmitConsultAppCompleted(this, new FnSubmitConsultAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnValidatSubmitConsultant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnValidatSubmitConsultant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnValidatSubmitConsultant(string username, string project_number) {
            object[] results = this.Invoke("FnValidatSubmitConsultant", new object[] {
                        username,
                        project_number});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnValidatSubmitConsultantAsync(string username, string project_number) {
            this.FnValidatSubmitConsultantAsync(username, project_number, null);
        }
        
        /// <remarks/>
        public void FnValidatSubmitConsultantAsync(string username, string project_number, object userState) {
            if ((this.FnValidatSubmitConsultantOperationCompleted == null)) {
                this.FnValidatSubmitConsultantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnValidatSubmitConsultantOperationCompleted);
            }
            this.InvokeAsync("FnValidatSubmitConsultant", new object[] {
                        username,
                        project_number}, this.FnValidatSubmitConsultantOperationCompleted, userState);
        }
        
        private void OnFnValidatSubmitConsultantOperationCompleted(object arg) {
            if ((this.FnValidatSubmitConsultantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnValidatSubmitConsultantCompleted(this, new FnValidatSubmitConsultantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnConsultantPasswordReset", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnConsultantPasswordReset_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnConsultantPasswordReset(string myOrgUsername, string newPassword) {
            object[] results = this.Invoke("FnConsultantPasswordReset", new object[] {
                        myOrgUsername,
                        newPassword});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnConsultantPasswordResetAsync(string myOrgUsername, string newPassword) {
            this.FnConsultantPasswordResetAsync(myOrgUsername, newPassword, null);
        }
        
        /// <remarks/>
        public void FnConsultantPasswordResetAsync(string myOrgUsername, string newPassword, object userState) {
            if ((this.FnConsultantPasswordResetOperationCompleted == null)) {
                this.FnConsultantPasswordResetOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConsultantPasswordResetOperationCompleted);
            }
            this.InvokeAsync("FnConsultantPasswordReset", new object[] {
                        myOrgUsername,
                        newPassword}, this.FnConsultantPasswordResetOperationCompleted, userState);
        }
        
        private void OnFnConsultantPasswordResetOperationCompleted(object arg) {
            if ((this.FnConsultantPasswordResetCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConsultantPasswordResetCompleted(this, new FnConsultantPasswordResetCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnConsultant_PasswordChange", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnConsultant_PasswordChange_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnConsultant_PasswordChange(string userName, string oldPassword, string newPassword) {
            object[] results = this.Invoke("FnConsultant_PasswordChange", new object[] {
                        userName,
                        oldPassword,
                        newPassword});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnConsultant_PasswordChangeAsync(string userName, string oldPassword, string newPassword) {
            this.FnConsultant_PasswordChangeAsync(userName, oldPassword, newPassword, null);
        }
        
        /// <remarks/>
        public void FnConsultant_PasswordChangeAsync(string userName, string oldPassword, string newPassword, object userState) {
            if ((this.FnConsultant_PasswordChangeOperationCompleted == null)) {
                this.FnConsultant_PasswordChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnConsultant_PasswordChangeOperationCompleted);
            }
            this.InvokeAsync("FnConsultant_PasswordChange", new object[] {
                        userName,
                        oldPassword,
                        newPassword}, this.FnConsultant_PasswordChangeOperationCompleted, userState);
        }
        
        private void OnFnConsultant_PasswordChangeOperationCompleted(object arg) {
            if ((this.FnConsultant_PasswordChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnConsultant_PasswordChangeCompleted(this, new FnConsultant_PasswordChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteUploadConsult", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteUploadConsult_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnDeleteUploadConsult(string iD) {
            object[] results = this.Invoke("FnDeleteUploadConsult", new object[] {
                        iD});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteUploadConsultAsync(string iD) {
            this.FnDeleteUploadConsultAsync(iD, null);
        }
        
        /// <remarks/>
        public void FnDeleteUploadConsultAsync(string iD, object userState) {
            if ((this.FnDeleteUploadConsultOperationCompleted == null)) {
                this.FnDeleteUploadConsultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteUploadConsultOperationCompleted);
            }
            this.InvokeAsync("FnDeleteUploadConsult", new object[] {
                        iD}, this.FnDeleteUploadConsultOperationCompleted, userState);
        }
        
        private void OnFnDeleteUploadConsultOperationCompleted(object arg) {
            if ((this.FnDeleteUploadConsultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteUploadConsultCompleted(this, new FnDeleteUploadConsultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAttachMatrixx", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAttachMatrixx_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachMatrixx(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached) {
            object[] results = this.Invoke("FnAttachMatrixx", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name,
                        callrefNo,
                        attached});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachMatrixxAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached) {
            this.FnAttachMatrixxAsync(user_No, document_type, link, document_name, grant_type, document_kind, userName, project_name, callrefNo, attached, null);
        }
        
        /// <remarks/>
        public void FnAttachMatrixxAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, string callrefNo, string attached, object userState) {
            if ((this.FnAttachMatrixxOperationCompleted == null)) {
                this.FnAttachMatrixxOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachMatrixxOperationCompleted);
            }
            this.InvokeAsync("FnAttachMatrixx", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name,
                        callrefNo,
                        attached}, this.FnAttachMatrixxOperationCompleted, userState);
        }
        
        private void OnFnAttachMatrixxOperationCompleted(object arg) {
            if ((this.FnAttachMatrixxCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachMatrixxCompleted(this, new FnAttachMatrixxCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRetrieveSavedPic", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRetrieveSavedPic_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnRetrieveSavedPic(string userNo, ref string photo) {
            object[] results = this.Invoke("FnRetrieveSavedPic", new object[] {
                        userNo,
                        photo});
            photo = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnRetrieveSavedPicAsync(string userNo, string photo) {
            this.FnRetrieveSavedPicAsync(userNo, photo, null);
        }
        
        /// <remarks/>
        public void FnRetrieveSavedPicAsync(string userNo, string photo, object userState) {
            if ((this.FnRetrieveSavedPicOperationCompleted == null)) {
                this.FnRetrieveSavedPicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRetrieveSavedPicOperationCompleted);
            }
            this.InvokeAsync("FnRetrieveSavedPic", new object[] {
                        userNo,
                        photo}, this.FnRetrieveSavedPicOperationCompleted, userState);
        }
        
        private void OnFnRetrieveSavedPicOperationCompleted(object arg) {
            if ((this.FnRetrieveSavedPicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRetrieveSavedPicCompleted(this, new FnRetrieveSavedPicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddProfPic", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddProfPic_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddProfPic(string userNo, string photoBLOB) {
            object[] results = this.Invoke("FnAddProfPic", new object[] {
                        userNo,
                        photoBLOB});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddProfPicAsync(string userNo, string photoBLOB) {
            this.FnAddProfPicAsync(userNo, photoBLOB, null);
        }
        
        /// <remarks/>
        public void FnAddProfPicAsync(string userNo, string photoBLOB, object userState) {
            if ((this.FnAddProfPicOperationCompleted == null)) {
                this.FnAddProfPicOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddProfPicOperationCompleted);
            }
            this.InvokeAsync("FnAddProfPic", new object[] {
                        userNo,
                        photoBLOB}, this.FnAddProfPicOperationCompleted, userState);
        }
        
        private void OnFnAddProfPicOperationCompleted(object arg) {
            if ((this.FnAddProfPicCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddProfPicCompleted(this, new FnAddProfPicCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnExportBLOB", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnExportBLOB_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnExportBLOB(string no) {
            this.Invoke("FnExportBLOB", new object[] {
                        no});
        }
        
        /// <remarks/>
        public void FnExportBLOBAsync(string no) {
            this.FnExportBLOBAsync(no, null);
        }
        
        /// <remarks/>
        public void FnExportBLOBAsync(string no, object userState) {
            if ((this.FnExportBLOBOperationCompleted == null)) {
                this.FnExportBLOBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnExportBLOBOperationCompleted);
            }
            this.InvokeAsync("FnExportBLOB", new object[] {
                        no}, this.FnExportBLOBOperationCompleted, userState);
        }
        
        private void OnFnExportBLOBOperationCompleted(object arg) {
            if ((this.FnExportBLOBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnExportBLOBCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSavePersonalBankDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSavePersonalBankDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSavePersonalBankDetails(string my_bank_name, string my_bank_branch, string student_username, string my_account_no, string students_idno, string myaccount_name) {
            object[] results = this.Invoke("FnSavePersonalBankDetails", new object[] {
                        my_bank_name,
                        my_bank_branch,
                        student_username,
                        my_account_no,
                        students_idno,
                        myaccount_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSavePersonalBankDetailsAsync(string my_bank_name, string my_bank_branch, string student_username, string my_account_no, string students_idno, string myaccount_name) {
            this.FnSavePersonalBankDetailsAsync(my_bank_name, my_bank_branch, student_username, my_account_no, students_idno, myaccount_name, null);
        }
        
        /// <remarks/>
        public void FnSavePersonalBankDetailsAsync(string my_bank_name, string my_bank_branch, string student_username, string my_account_no, string students_idno, string myaccount_name, object userState) {
            if ((this.FnSavePersonalBankDetailsOperationCompleted == null)) {
                this.FnSavePersonalBankDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSavePersonalBankDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSavePersonalBankDetails", new object[] {
                        my_bank_name,
                        my_bank_branch,
                        student_username,
                        my_account_no,
                        students_idno,
                        myaccount_name}, this.FnSavePersonalBankDetailsOperationCompleted, userState);
        }
        
        private void OnFnSavePersonalBankDetailsOperationCompleted(object arg) {
            if ((this.FnSavePersonalBankDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSavePersonalBankDetailsCompleted(this, new FnSavePersonalBankDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteScholarship", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteScholarship_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnDeleteScholarship(string code) {
            object[] results = this.Invoke("FnDeleteScholarship", new object[] {
                        code});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnDeleteScholarshipAsync(string code) {
            this.FnDeleteScholarshipAsync(code, null);
        }
        
        /// <remarks/>
        public void FnDeleteScholarshipAsync(string code, object userState) {
            if ((this.FnDeleteScholarshipOperationCompleted == null)) {
                this.FnDeleteScholarshipOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteScholarshipOperationCompleted);
            }
            this.InvokeAsync("FnDeleteScholarship", new object[] {
                        code}, this.FnDeleteScholarshipOperationCompleted, userState);
        }
        
        private void OnFnDeleteScholarshipOperationCompleted(object arg) {
            if ((this.FnDeleteScholarshipCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteScholarshipCompleted(this, new FnDeleteScholarshipCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddXstingGrantee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddXstingGrantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddXstingGrantee(string email, string username, string password, string activationCode) {
            object[] results = this.Invoke("FnAddXstingGrantee", new object[] {
                        email,
                        username,
                        password,
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddXstingGranteeAsync(string email, string username, string password, string activationCode) {
            this.FnAddXstingGranteeAsync(email, username, password, activationCode, null);
        }
        
        /// <remarks/>
        public void FnAddXstingGranteeAsync(string email, string username, string password, string activationCode, object userState) {
            if ((this.FnAddXstingGranteeOperationCompleted == null)) {
                this.FnAddXstingGranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddXstingGranteeOperationCompleted);
            }
            this.InvokeAsync("FnAddXstingGrantee", new object[] {
                        email,
                        username,
                        password,
                        activationCode}, this.FnAddXstingGranteeOperationCompleted, userState);
        }
        
        private void OnFnAddXstingGranteeOperationCompleted(object arg) {
            if ((this.FnAddXstingGranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddXstingGranteeCompleted(this, new FnAddXstingGranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddXstingScholar", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddXstingScholar_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddXstingScholar(string email, string username, string password, string activationCode) {
            object[] results = this.Invoke("FnAddXstingScholar", new object[] {
                        email,
                        username,
                        password,
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddXstingScholarAsync(string email, string username, string password, string activationCode) {
            this.FnAddXstingScholarAsync(email, username, password, activationCode, null);
        }
        
        /// <remarks/>
        public void FnAddXstingScholarAsync(string email, string username, string password, string activationCode, object userState) {
            if ((this.FnAddXstingScholarOperationCompleted == null)) {
                this.FnAddXstingScholarOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddXstingScholarOperationCompleted);
            }
            this.InvokeAsync("FnAddXstingScholar", new object[] {
                        email,
                        username,
                        password,
                        activationCode}, this.FnAddXstingScholarOperationCompleted, userState);
        }
        
        private void OnFnAddXstingScholarOperationCompleted(object arg) {
            if ((this.FnAddXstingScholarCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddXstingScholarCompleted(this, new FnAddXstingScholarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddXstingConsult", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddXstingConsult_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAddXstingConsult(string email, string username, string password, string activationCode) {
            object[] results = this.Invoke("FnAddXstingConsult", new object[] {
                        email,
                        username,
                        password,
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAddXstingConsultAsync(string email, string username, string password, string activationCode) {
            this.FnAddXstingConsultAsync(email, username, password, activationCode, null);
        }
        
        /// <remarks/>
        public void FnAddXstingConsultAsync(string email, string username, string password, string activationCode, object userState) {
            if ((this.FnAddXstingConsultOperationCompleted == null)) {
                this.FnAddXstingConsultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddXstingConsultOperationCompleted);
            }
            this.InvokeAsync("FnAddXstingConsult", new object[] {
                        email,
                        username,
                        password,
                        activationCode}, this.FnAddXstingConsultOperationCompleted, userState);
        }
        
        private void OnFnAddXstingConsultOperationCompleted(object arg) {
            if ((this.FnAddXstingConsultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddXstingConsultCompleted(this, new FnAddXstingConsultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCheckGranteeProfileUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCheckGranteeProfileUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCheckGranteeProfileUpdated(string grantNo) {
            object[] results = this.Invoke("FnCheckGranteeProfileUpdated", new object[] {
                        grantNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckGranteeProfileUpdatedAsync(string grantNo) {
            this.FnCheckGranteeProfileUpdatedAsync(grantNo, null);
        }
        
        /// <remarks/>
        public void FnCheckGranteeProfileUpdatedAsync(string grantNo, object userState) {
            if ((this.FnCheckGranteeProfileUpdatedOperationCompleted == null)) {
                this.FnCheckGranteeProfileUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckGranteeProfileUpdatedOperationCompleted);
            }
            this.InvokeAsync("FnCheckGranteeProfileUpdated", new object[] {
                        grantNo}, this.FnCheckGranteeProfileUpdatedOperationCompleted, userState);
        }
        
        private void OnFnCheckGranteeProfileUpdatedOperationCompleted(object arg) {
            if ((this.FnCheckGranteeProfileUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckGranteeProfileUpdatedCompleted(this, new FnCheckGranteeProfileUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAttachReportForms", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAttachReportForms_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnAttachReportForms(string user_No, string document_type, string document_name, int project_type, string document_kind, string userName, string project_title, string callrefNo, string attached, string year, string quarter) {
            object[] results = this.Invoke("FnAttachReportForms", new object[] {
                        user_No,
                        document_type,
                        document_name,
                        project_type,
                        document_kind,
                        userName,
                        project_title,
                        callrefNo,
                        attached,
                        year,
                        quarter});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnAttachReportFormsAsync(string user_No, string document_type, string document_name, int project_type, string document_kind, string userName, string project_title, string callrefNo, string attached, string year, string quarter) {
            this.FnAttachReportFormsAsync(user_No, document_type, document_name, project_type, document_kind, userName, project_title, callrefNo, attached, year, quarter, null);
        }
        
        /// <remarks/>
        public void FnAttachReportFormsAsync(string user_No, string document_type, string document_name, int project_type, string document_kind, string userName, string project_title, string callrefNo, string attached, string year, string quarter, object userState) {
            if ((this.FnAttachReportFormsOperationCompleted == null)) {
                this.FnAttachReportFormsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachReportFormsOperationCompleted);
            }
            this.InvokeAsync("FnAttachReportForms", new object[] {
                        user_No,
                        document_type,
                        document_name,
                        project_type,
                        document_kind,
                        userName,
                        project_title,
                        callrefNo,
                        attached,
                        year,
                        quarter}, this.FnAttachReportFormsOperationCompleted, userState);
        }
        
        private void OnFnAttachReportFormsOperationCompleted(object arg) {
            if ((this.FnAttachReportFormsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachReportFormsCompleted(this, new FnAttachReportFormsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnFetchNavPicture", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnFetchNavPicture_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnFetchNavPicture(string userName, ref string thePicture) {
            object[] results = this.Invoke("FnFetchNavPicture", new object[] {
                        userName,
                        thePicture});
            thePicture = ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnFetchNavPictureAsync(string userName, string thePicture) {
            this.FnFetchNavPictureAsync(userName, thePicture, null);
        }
        
        /// <remarks/>
        public void FnFetchNavPictureAsync(string userName, string thePicture, object userState) {
            if ((this.FnFetchNavPictureOperationCompleted == null)) {
                this.FnFetchNavPictureOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFetchNavPictureOperationCompleted);
            }
            this.InvokeAsync("FnFetchNavPicture", new object[] {
                        userName,
                        thePicture}, this.FnFetchNavPictureOperationCompleted, userState);
        }
        
        private void OnFnFetchNavPictureOperationCompleted(object arg) {
            if ((this.FnFetchNavPictureCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFetchNavPictureCompleted(this, new FnFetchNavPictureCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCheckScholarProfileUpdated", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCheckScholarProfileUpdated_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCheckScholarProfileUpdated(string scolarNo) {
            object[] results = this.Invoke("FnCheckScholarProfileUpdated", new object[] {
                        scolarNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCheckScholarProfileUpdatedAsync(string scolarNo) {
            this.FnCheckScholarProfileUpdatedAsync(scolarNo, null);
        }
        
        /// <remarks/>
        public void FnCheckScholarProfileUpdatedAsync(string scolarNo, object userState) {
            if ((this.FnCheckScholarProfileUpdatedOperationCompleted == null)) {
                this.FnCheckScholarProfileUpdatedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCheckScholarProfileUpdatedOperationCompleted);
            }
            this.InvokeAsync("FnCheckScholarProfileUpdated", new object[] {
                        scolarNo}, this.FnCheckScholarProfileUpdatedOperationCompleted, userState);
        }
        
        private void OnFnCheckScholarProfileUpdatedOperationCompleted(object arg) {
            if ((this.FnCheckScholarProfileUpdatedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCheckScholarProfileUpdatedCompleted(this, new FnCheckScholarProfileUpdatedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSumbitScholarshipApp", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSumbitScholarshipApp_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnSumbitScholarshipApp(string username, string callNo) {
            object[] results = this.Invoke("FnSumbitScholarshipApp", new object[] {
                        username,
                        callNo});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnSumbitScholarshipAppAsync(string username, string callNo) {
            this.FnSumbitScholarshipAppAsync(username, callNo, null);
        }
        
        /// <remarks/>
        public void FnSumbitScholarshipAppAsync(string username, string callNo, object userState) {
            if ((this.FnSumbitScholarshipAppOperationCompleted == null)) {
                this.FnSumbitScholarshipAppOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSumbitScholarshipAppOperationCompleted);
            }
            this.InvokeAsync("FnSumbitScholarshipApp", new object[] {
                        username,
                        callNo}, this.FnSumbitScholarshipAppOperationCompleted, userState);
        }
        
        private void OnFnSumbitScholarshipAppOperationCompleted(object arg) {
            if ((this.FnSumbitScholarshipAppCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSumbitScholarshipAppCompleted(this, new FnSumbitScholarshipAppCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCountGrantsNotifications", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCountGrantsNotifications_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public int FnCountGrantsNotifications(string userName) {
            object[] results = this.Invoke("FnCountGrantsNotifications", new object[] {
                        userName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void FnCountGrantsNotificationsAsync(string userName) {
            this.FnCountGrantsNotificationsAsync(userName, null);
        }
        
        /// <remarks/>
        public void FnCountGrantsNotificationsAsync(string userName, object userState) {
            if ((this.FnCountGrantsNotificationsOperationCompleted == null)) {
                this.FnCountGrantsNotificationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCountGrantsNotificationsOperationCompleted);
            }
            this.InvokeAsync("FnCountGrantsNotifications", new object[] {
                        userName}, this.FnCountGrantsNotificationsOperationCompleted, userState);
        }
        
        private void OnFnCountGrantsNotificationsOperationCompleted(object arg) {
            if ((this.FnCountGrantsNotificationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCountGrantsNotificationsCompleted(this, new FnCountGrantsNotificationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnFullfillTask", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnFullfillTask_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnFullfillTask(string taskNo) {
            this.Invoke("FnFullfillTask", new object[] {
                        taskNo});
        }
        
        /// <remarks/>
        public void FnFullfillTaskAsync(string taskNo) {
            this.FnFullfillTaskAsync(taskNo, null);
        }
        
        /// <remarks/>
        public void FnFullfillTaskAsync(string taskNo, object userState) {
            if ((this.FnFullfillTaskOperationCompleted == null)) {
                this.FnFullfillTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFullfillTaskOperationCompleted);
            }
            this.InvokeAsync("FnFullfillTask", new object[] {
                        taskNo}, this.FnFullfillTaskOperationCompleted, userState);
        }
        
        private void OnFnFullfillTaskOperationCompleted(object arg) {
            if ((this.FnFullfillTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFullfillTaskCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnActivateAcCompletedEventHandler(object sender, FnActivateAcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnActivateAcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnActivateAcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnRegisterStudentCompletedEventHandler(object sender, FnRegisterStudentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegisterStudentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegisterStudentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCreateAccountCompletedEventHandler(object sender, FnCreateAccountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateAccountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateAccountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEducatBgCompletedEventHandler(object sender, FnEducatBgCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEducatBgCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEducatBgCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddRefereeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddScholasticSupportCompletedEventHandler(object sender, FnAddScholasticSupportCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddScholasticSupportCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddScholasticSupportCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddWorkplanItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddGranteeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnActivateGranteeCompletedEventHandler(object sender, FnActivateGranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnActivateGranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnActivateGranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnRegGranteeInfoCompletedEventHandler(object sender, FnRegGranteeInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRegGranteeInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRegGranteeInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAttachmentCompletedEventHandler(object sender, FnAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnGrantManagerCompletedEventHandler(object sender, FnGrantManagerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGrantManagerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGrantManagerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnProjectOverviewCompletedEventHandler(object sender, FnProjectOverviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnProjectOverviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnProjectOverviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteRefereeCompletedEventHandler(object sender, FnDeleteRefereeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteRefereeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteRefereeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSaveProfPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteUploadCompletedEventHandler(object sender, FnDeleteUploadCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteUploadCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteUploadCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteGrantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnValidateSubmissionCompletedEventHandler(object sender, FnValidateSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnValidateSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnValidateSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSaveToGargetGroupCompletedEventHandler(object sender, FnSaveToGargetGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveToGargetGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveToGargetGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDelSchlSupportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDelWorkplanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEditProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEditGrantManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnFinalSubmissionCompletedEventHandler(object sender, FnFinalSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFinalSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFinalSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnChangeSubmitStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSaveUniBankDetailsCompletedEventHandler(object sender, FnSaveUniBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSaveUniBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSaveUniBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCheckIfActive_GranteeCompletedEventHandler(object sender, FnCheckIfActive_GranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckIfActive_GranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckIfActive_GranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnVerifyStudentRegNoCompletedEventHandler(object sender, FnVerifyStudentRegNoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnVerifyStudentRegNoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnVerifyStudentRegNoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddScholarshipCompletedEventHandler(object sender, FnAddScholarshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddScholarshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddScholarshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnStudentPasswordResetCompletedEventHandler(object sender, FnStudentPasswordResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnStudentPasswordResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnStudentPasswordResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnGranteePasswordResetCompletedEventHandler(object sender, FnGranteePasswordResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGranteePasswordResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGranteePasswordResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnGrantee_PasswordChangeCompletedEventHandler(object sender, FnGrantee_PasswordChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGrantee_PasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGrantee_PasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnStudent_PasswordChangeCompletedEventHandler(object sender, FnStudent_PasswordChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnStudent_PasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnStudent_PasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAttachements_ScholarshipCompletedEventHandler(object sender, FnAttachements_ScholarshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachements_ScholarshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachements_ScholarshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddProjObjectiveCompletedEventHandler(object sender, FnAddProjObjectiveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddProjObjectiveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddProjObjectiveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCreateConsultantCompletedEventHandler(object sender, FnCreateConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnActivateConsultantCompletedEventHandler(object sender, FnActivateConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnActivateConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnActivateConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnVerifyConsultantCompletedEventHandler(object sender, FnVerifyConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnVerifyConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnVerifyConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEditConsultantCompletedEventHandler(object sender, FnEditConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnEditConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnEditConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddConsultantApplicationCompletedEventHandler(object sender, FnAddConsultantApplicationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddConsultantApplicationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddConsultantApplicationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCheckIfAppliedCompletedEventHandler(object sender, FnCheckIfAppliedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckIfAppliedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckIfAppliedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAttachmentConsultantCompletedEventHandler(object sender, FnAttachmentConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachmentConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachmentConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSubmitConsultAppCompletedEventHandler(object sender, FnSubmitConsultAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSubmitConsultAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSubmitConsultAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnValidatSubmitConsultantCompletedEventHandler(object sender, FnValidatSubmitConsultantCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnValidatSubmitConsultantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnValidatSubmitConsultantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnConsultantPasswordResetCompletedEventHandler(object sender, FnConsultantPasswordResetCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConsultantPasswordResetCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConsultantPasswordResetCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnConsultant_PasswordChangeCompletedEventHandler(object sender, FnConsultant_PasswordChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnConsultant_PasswordChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnConsultant_PasswordChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteUploadConsultCompletedEventHandler(object sender, FnDeleteUploadConsultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteUploadConsultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteUploadConsultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAttachMatrixxCompletedEventHandler(object sender, FnAttachMatrixxCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachMatrixxCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachMatrixxCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnRetrieveSavedPicCompletedEventHandler(object sender, FnRetrieveSavedPicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnRetrieveSavedPicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnRetrieveSavedPicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string photo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddProfPicCompletedEventHandler(object sender, FnAddProfPicCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddProfPicCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddProfPicCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnExportBLOBCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSavePersonalBankDetailsCompletedEventHandler(object sender, FnSavePersonalBankDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSavePersonalBankDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSavePersonalBankDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteScholarshipCompletedEventHandler(object sender, FnDeleteScholarshipCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnDeleteScholarshipCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnDeleteScholarshipCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddXstingGranteeCompletedEventHandler(object sender, FnAddXstingGranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddXstingGranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddXstingGranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddXstingScholarCompletedEventHandler(object sender, FnAddXstingScholarCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddXstingScholarCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddXstingScholarCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddXstingConsultCompletedEventHandler(object sender, FnAddXstingConsultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAddXstingConsultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAddXstingConsultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCheckGranteeProfileUpdatedCompletedEventHandler(object sender, FnCheckGranteeProfileUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckGranteeProfileUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckGranteeProfileUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAttachReportFormsCompletedEventHandler(object sender, FnAttachReportFormsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnAttachReportFormsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnAttachReportFormsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnFetchNavPictureCompletedEventHandler(object sender, FnFetchNavPictureCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFetchNavPictureCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFetchNavPictureCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string thePicture {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCheckScholarProfileUpdatedCompletedEventHandler(object sender, FnCheckScholarProfileUpdatedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCheckScholarProfileUpdatedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCheckScholarProfileUpdatedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSumbitScholarshipAppCompletedEventHandler(object sender, FnSumbitScholarshipAppCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSumbitScholarshipAppCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSumbitScholarshipAppCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCountGrantsNotificationsCompletedEventHandler(object sender, FnCountGrantsNotificationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCountGrantsNotificationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCountGrantsNotificationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnFullfillTaskCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591