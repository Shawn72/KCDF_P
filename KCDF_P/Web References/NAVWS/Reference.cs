//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace KCDF_P.NAVWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="Portals_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/Portals")]
    public partial class Portals : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnActivateAcOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegisterStudentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateAccountOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEducatBgOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddScholasticSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddWorkplanItemOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAddGranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnActivateGranteeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnRegGranteeInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGrantManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnProjectOverviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteRefereeOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveProfPOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteUploadOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteGrantOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDeleteProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnValidateSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnSaveToGargetGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDelSchlSupportOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnDelWorkplanOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditProjectOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnEditGrantManagerOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFinalSubmissionOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnChangeSubmitStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Portals() {
            this.Url = global::KCDF_P.Properties.Settings.Default.KCDF_P_NAVWS_Portals;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnActivateAcCompletedEventHandler FnActivateAcCompleted;
        
        /// <remarks/>
        public event FnRegisterStudentCompletedEventHandler FnRegisterStudentCompleted;
        
        /// <remarks/>
        public event FnCreateAccountCompletedEventHandler FnCreateAccountCompleted;
        
        /// <remarks/>
        public event FnEducatBgCompletedEventHandler FnEducatBgCompleted;
        
        /// <remarks/>
        public event FnAddRefereeCompletedEventHandler FnAddRefereeCompleted;
        
        /// <remarks/>
        public event FnAddScholasticSupportCompletedEventHandler FnAddScholasticSupportCompleted;
        
        /// <remarks/>
        public event FnAddWorkplanItemCompletedEventHandler FnAddWorkplanItemCompleted;
        
        /// <remarks/>
        public event FnAddGranteeCompletedEventHandler FnAddGranteeCompleted;
        
        /// <remarks/>
        public event FnActivateGranteeCompletedEventHandler FnActivateGranteeCompleted;
        
        /// <remarks/>
        public event FnRegGranteeInfoCompletedEventHandler FnRegGranteeInfoCompleted;
        
        /// <remarks/>
        public event FnAttachmentCompletedEventHandler FnAttachmentCompleted;
        
        /// <remarks/>
        public event FnGrantManagerCompletedEventHandler FnGrantManagerCompleted;
        
        /// <remarks/>
        public event FnProjectOverviewCompletedEventHandler FnProjectOverviewCompleted;
        
        /// <remarks/>
        public event FnDeleteRefereeCompletedEventHandler FnDeleteRefereeCompleted;
        
        /// <remarks/>
        public event FnSaveProfPCompletedEventHandler FnSaveProfPCompleted;
        
        /// <remarks/>
        public event FnDeleteUploadCompletedEventHandler FnDeleteUploadCompleted;
        
        /// <remarks/>
        public event FnDeleteGrantCompletedEventHandler FnDeleteGrantCompleted;
        
        /// <remarks/>
        public event FnDeleteProjectCompletedEventHandler FnDeleteProjectCompleted;
        
        /// <remarks/>
        public event FnValidateSubmissionCompletedEventHandler FnValidateSubmissionCompleted;
        
        /// <remarks/>
        public event FnSaveToGargetGroupCompletedEventHandler FnSaveToGargetGroupCompleted;
        
        /// <remarks/>
        public event FnDelSchlSupportCompletedEventHandler FnDelSchlSupportCompleted;
        
        /// <remarks/>
        public event FnDelWorkplanCompletedEventHandler FnDelWorkplanCompleted;
        
        /// <remarks/>
        public event FnEditProjectCompletedEventHandler FnEditProjectCompleted;
        
        /// <remarks/>
        public event FnEditGrantManagerCompletedEventHandler FnEditGrantManagerCompleted;
        
        /// <remarks/>
        public event FnFinalSubmissionCompletedEventHandler FnFinalSubmissionCompleted;
        
        /// <remarks/>
        public event FnChangeSubmitStatusCompletedEventHandler FnChangeSubmitStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnActivateAc", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnActivateAc_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnActivateAc(string activationCode) {
            object[] results = this.Invoke("FnActivateAc", new object[] {
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnActivateAcAsync(string activationCode) {
            this.FnActivateAcAsync(activationCode, null);
        }
        
        /// <remarks/>
        public void FnActivateAcAsync(string activationCode, object userState) {
            if ((this.FnActivateAcOperationCompleted == null)) {
                this.FnActivateAcOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnActivateAcOperationCompleted);
            }
            this.InvokeAsync("FnActivateAc", new object[] {
                        activationCode}, this.FnActivateAcOperationCompleted, userState);
        }
        
        private void OnFnActivateAcOperationCompleted(object arg) {
            if ((this.FnActivateAcCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnActivateAcCompleted(this, new FnActivateAcCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRegisterStudent", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRegisterStudent_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnRegisterStudent(string fName, string mName, string lName, string iD_Noa46, string residence, string phone_Num, string userName, int gender, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime dateOfBirth) {
            this.Invoke("FnRegisterStudent", new object[] {
                        fName,
                        mName,
                        lName,
                        iD_Noa46,
                        residence,
                        phone_Num,
                        userName,
                        gender,
                        dateOfBirth});
        }
        
        /// <remarks/>
        public void FnRegisterStudentAsync(string fName, string mName, string lName, string iD_Noa46, string residence, string phone_Num, string userName, int gender, System.DateTime dateOfBirth) {
            this.FnRegisterStudentAsync(fName, mName, lName, iD_Noa46, residence, phone_Num, userName, gender, dateOfBirth, null);
        }
        
        /// <remarks/>
        public void FnRegisterStudentAsync(string fName, string mName, string lName, string iD_Noa46, string residence, string phone_Num, string userName, int gender, System.DateTime dateOfBirth, object userState) {
            if ((this.FnRegisterStudentOperationCompleted == null)) {
                this.FnRegisterStudentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegisterStudentOperationCompleted);
            }
            this.InvokeAsync("FnRegisterStudent", new object[] {
                        fName,
                        mName,
                        lName,
                        iD_Noa46,
                        residence,
                        phone_Num,
                        userName,
                        gender,
                        dateOfBirth}, this.FnRegisterStudentOperationCompleted, userState);
        }
        
        private void OnFnRegisterStudentOperationCompleted(object arg) {
            if ((this.FnRegisterStudentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegisterStudentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnCreateAccount", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnCreateAccount_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnCreateAccount(string first_Name, string middle_Name, string last_Name, string email, string userName, string password, string activation_Code) {
            this.Invoke("FnCreateAccount", new object[] {
                        first_Name,
                        middle_Name,
                        last_Name,
                        email,
                        userName,
                        password,
                        activation_Code});
        }
        
        /// <remarks/>
        public void FnCreateAccountAsync(string first_Name, string middle_Name, string last_Name, string email, string userName, string password, string activation_Code) {
            this.FnCreateAccountAsync(first_Name, middle_Name, last_Name, email, userName, password, activation_Code, null);
        }
        
        /// <remarks/>
        public void FnCreateAccountAsync(string first_Name, string middle_Name, string last_Name, string email, string userName, string password, string activation_Code, object userState) {
            if ((this.FnCreateAccountOperationCompleted == null)) {
                this.FnCreateAccountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateAccountOperationCompleted);
            }
            this.InvokeAsync("FnCreateAccount", new object[] {
                        first_Name,
                        middle_Name,
                        last_Name,
                        email,
                        userName,
                        password,
                        activation_Code}, this.FnCreateAccountOperationCompleted, userState);
        }
        
        private void OnFnCreateAccountOperationCompleted(object arg) {
            if ((this.FnCreateAccountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateAccountCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEducatBg", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEducatBg_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEducatBg(string useRname, string primo_sch, string sec_sch, string univCollege, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime yearofAdmn, string yearofStudy, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime yearofCompltn, string parentGuardian_Phone, string parentGuardian_Email, string parentGuardian_Address, string degree) {
            this.Invoke("FnEducatBg", new object[] {
                        useRname,
                        primo_sch,
                        sec_sch,
                        univCollege,
                        yearofAdmn,
                        yearofStudy,
                        yearofCompltn,
                        parentGuardian_Phone,
                        parentGuardian_Email,
                        parentGuardian_Address,
                        degree});
        }
        
        /// <remarks/>
        public void FnEducatBgAsync(string useRname, string primo_sch, string sec_sch, string univCollege, System.DateTime yearofAdmn, string yearofStudy, System.DateTime yearofCompltn, string parentGuardian_Phone, string parentGuardian_Email, string parentGuardian_Address, string degree) {
            this.FnEducatBgAsync(useRname, primo_sch, sec_sch, univCollege, yearofAdmn, yearofStudy, yearofCompltn, parentGuardian_Phone, parentGuardian_Email, parentGuardian_Address, degree, null);
        }
        
        /// <remarks/>
        public void FnEducatBgAsync(string useRname, string primo_sch, string sec_sch, string univCollege, System.DateTime yearofAdmn, string yearofStudy, System.DateTime yearofCompltn, string parentGuardian_Phone, string parentGuardian_Email, string parentGuardian_Address, string degree, object userState) {
            if ((this.FnEducatBgOperationCompleted == null)) {
                this.FnEducatBgOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEducatBgOperationCompleted);
            }
            this.InvokeAsync("FnEducatBg", new object[] {
                        useRname,
                        primo_sch,
                        sec_sch,
                        univCollege,
                        yearofAdmn,
                        yearofStudy,
                        yearofCompltn,
                        parentGuardian_Phone,
                        parentGuardian_Email,
                        parentGuardian_Address,
                        degree}, this.FnEducatBgOperationCompleted, userState);
        }
        
        private void OnFnEducatBgOperationCompleted(object arg) {
            if ((this.FnEducatBgCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEducatBgCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddReferee(string userName, string stud_No, string fname, string mname, string lname, string phone_No, string email) {
            this.Invoke("FnAddReferee", new object[] {
                        userName,
                        stud_No,
                        fname,
                        mname,
                        lname,
                        phone_No,
                        email});
        }
        
        /// <remarks/>
        public void FnAddRefereeAsync(string userName, string stud_No, string fname, string mname, string lname, string phone_No, string email) {
            this.FnAddRefereeAsync(userName, stud_No, fname, mname, lname, phone_No, email, null);
        }
        
        /// <remarks/>
        public void FnAddRefereeAsync(string userName, string stud_No, string fname, string mname, string lname, string phone_No, string email, object userState) {
            if ((this.FnAddRefereeOperationCompleted == null)) {
                this.FnAddRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddRefereeOperationCompleted);
            }
            this.InvokeAsync("FnAddReferee", new object[] {
                        userName,
                        stud_No,
                        fname,
                        mname,
                        lname,
                        phone_No,
                        email}, this.FnAddRefereeOperationCompleted, userState);
        }
        
        private void OnFnAddRefereeOperationCompleted(object arg) {
            if ((this.FnAddRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddRefereeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddScholasticSupport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddScholasticSupport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddScholasticSupport(string description, string studentNo, string year_of_Study, decimal cost, string rank, string userName, string scholarship_name) {
            this.Invoke("FnAddScholasticSupport", new object[] {
                        description,
                        studentNo,
                        year_of_Study,
                        cost,
                        rank,
                        userName,
                        scholarship_name});
        }
        
        /// <remarks/>
        public void FnAddScholasticSupportAsync(string description, string studentNo, string year_of_Study, decimal cost, string rank, string userName, string scholarship_name) {
            this.FnAddScholasticSupportAsync(description, studentNo, year_of_Study, cost, rank, userName, scholarship_name, null);
        }
        
        /// <remarks/>
        public void FnAddScholasticSupportAsync(string description, string studentNo, string year_of_Study, decimal cost, string rank, string userName, string scholarship_name, object userState) {
            if ((this.FnAddScholasticSupportOperationCompleted == null)) {
                this.FnAddScholasticSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddScholasticSupportOperationCompleted);
            }
            this.InvokeAsync("FnAddScholasticSupport", new object[] {
                        description,
                        studentNo,
                        year_of_Study,
                        cost,
                        rank,
                        userName,
                        scholarship_name}, this.FnAddScholasticSupportOperationCompleted, userState);
        }
        
        private void OnFnAddScholasticSupportOperationCompleted(object arg) {
            if ((this.FnAddScholasticSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddScholasticSupportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddWorkplanItem", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddWorkplanItem_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddWorkplanItem(string userName, string studeNo, string objective, string activity, string activity_target, string means_of_veri, decimal amount, int timeframe, string scolarship_name) {
            this.Invoke("FnAddWorkplanItem", new object[] {
                        userName,
                        studeNo,
                        objective,
                        activity,
                        activity_target,
                        means_of_veri,
                        amount,
                        timeframe,
                        scolarship_name});
        }
        
        /// <remarks/>
        public void FnAddWorkplanItemAsync(string userName, string studeNo, string objective, string activity, string activity_target, string means_of_veri, decimal amount, int timeframe, string scolarship_name) {
            this.FnAddWorkplanItemAsync(userName, studeNo, objective, activity, activity_target, means_of_veri, amount, timeframe, scolarship_name, null);
        }
        
        /// <remarks/>
        public void FnAddWorkplanItemAsync(string userName, string studeNo, string objective, string activity, string activity_target, string means_of_veri, decimal amount, int timeframe, string scolarship_name, object userState) {
            if ((this.FnAddWorkplanItemOperationCompleted == null)) {
                this.FnAddWorkplanItemOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddWorkplanItemOperationCompleted);
            }
            this.InvokeAsync("FnAddWorkplanItem", new object[] {
                        userName,
                        studeNo,
                        objective,
                        activity,
                        activity_target,
                        means_of_veri,
                        amount,
                        timeframe,
                        scolarship_name}, this.FnAddWorkplanItemOperationCompleted, userState);
        }
        
        private void OnFnAddWorkplanItemOperationCompleted(object arg) {
            if ((this.FnAddWorkplanItemCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddWorkplanItemCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAddGrantee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAddGrantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAddGrantee(string orgName, string email, string username, string password, string activ_Code) {
            this.Invoke("FnAddGrantee", new object[] {
                        orgName,
                        email,
                        username,
                        password,
                        activ_Code});
        }
        
        /// <remarks/>
        public void FnAddGranteeAsync(string orgName, string email, string username, string password, string activ_Code) {
            this.FnAddGranteeAsync(orgName, email, username, password, activ_Code, null);
        }
        
        /// <remarks/>
        public void FnAddGranteeAsync(string orgName, string email, string username, string password, string activ_Code, object userState) {
            if ((this.FnAddGranteeOperationCompleted == null)) {
                this.FnAddGranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAddGranteeOperationCompleted);
            }
            this.InvokeAsync("FnAddGrantee", new object[] {
                        orgName,
                        email,
                        username,
                        password,
                        activ_Code}, this.FnAddGranteeOperationCompleted, userState);
        }
        
        private void OnFnAddGranteeOperationCompleted(object arg) {
            if ((this.FnAddGranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAddGranteeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnActivateGrantee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnActivateGrantee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnActivateGrantee(string activationCode) {
            object[] results = this.Invoke("FnActivateGrantee", new object[] {
                        activationCode});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnActivateGranteeAsync(string activationCode) {
            this.FnActivateGranteeAsync(activationCode, null);
        }
        
        /// <remarks/>
        public void FnActivateGranteeAsync(string activationCode, object userState) {
            if ((this.FnActivateGranteeOperationCompleted == null)) {
                this.FnActivateGranteeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnActivateGranteeOperationCompleted);
            }
            this.InvokeAsync("FnActivateGrantee", new object[] {
                        activationCode}, this.FnActivateGranteeOperationCompleted, userState);
        }
        
        private void OnFnActivateGranteeOperationCompleted(object arg) {
            if ((this.FnActivateGranteeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnActivateGranteeCompleted(this, new FnActivateGranteeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnRegGranteeInfo", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnRegGranteeInfo_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnRegGranteeInfo(
                    string username, 
                    string contact_person_name, 
                    string current_position, 
                    string phone_Number, 
                    string postal_address, 
                    string postal_code, 
                    string town, 
                    bool non_governmental, 
                    bool non_partisan, 
                    bool non_profit, 
                    bool legally_registered, 
                    string physical_address, 
                    string type_of_organization, 
                    [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime reg_Date, 
                    string website, 
                    string company_reg_no, 
                    string nonPartsan_Description) {
            this.Invoke("FnRegGranteeInfo", new object[] {
                        username,
                        contact_person_name,
                        current_position,
                        phone_Number,
                        postal_address,
                        postal_code,
                        town,
                        non_governmental,
                        non_partisan,
                        non_profit,
                        legally_registered,
                        physical_address,
                        type_of_organization,
                        reg_Date,
                        website,
                        company_reg_no,
                        nonPartsan_Description});
        }
        
        /// <remarks/>
        public void FnRegGranteeInfoAsync(
                    string username, 
                    string contact_person_name, 
                    string current_position, 
                    string phone_Number, 
                    string postal_address, 
                    string postal_code, 
                    string town, 
                    bool non_governmental, 
                    bool non_partisan, 
                    bool non_profit, 
                    bool legally_registered, 
                    string physical_address, 
                    string type_of_organization, 
                    System.DateTime reg_Date, 
                    string website, 
                    string company_reg_no, 
                    string nonPartsan_Description) {
            this.FnRegGranteeInfoAsync(username, contact_person_name, current_position, phone_Number, postal_address, postal_code, town, non_governmental, non_partisan, non_profit, legally_registered, physical_address, type_of_organization, reg_Date, website, company_reg_no, nonPartsan_Description, null);
        }
        
        /// <remarks/>
        public void FnRegGranteeInfoAsync(
                    string username, 
                    string contact_person_name, 
                    string current_position, 
                    string phone_Number, 
                    string postal_address, 
                    string postal_code, 
                    string town, 
                    bool non_governmental, 
                    bool non_partisan, 
                    bool non_profit, 
                    bool legally_registered, 
                    string physical_address, 
                    string type_of_organization, 
                    System.DateTime reg_Date, 
                    string website, 
                    string company_reg_no, 
                    string nonPartsan_Description, 
                    object userState) {
            if ((this.FnRegGranteeInfoOperationCompleted == null)) {
                this.FnRegGranteeInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnRegGranteeInfoOperationCompleted);
            }
            this.InvokeAsync("FnRegGranteeInfo", new object[] {
                        username,
                        contact_person_name,
                        current_position,
                        phone_Number,
                        postal_address,
                        postal_code,
                        town,
                        non_governmental,
                        non_partisan,
                        non_profit,
                        legally_registered,
                        physical_address,
                        type_of_organization,
                        reg_Date,
                        website,
                        company_reg_no,
                        nonPartsan_Description}, this.FnRegGranteeInfoOperationCompleted, userState);
        }
        
        private void OnFnRegGranteeInfoOperationCompleted(object arg) {
            if ((this.FnRegGranteeInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnRegGranteeInfoCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnAttachment", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnAttachment_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnAttachment(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name) {
            this.Invoke("FnAttachment", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name});
        }
        
        /// <remarks/>
        public void FnAttachmentAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name) {
            this.FnAttachmentAsync(user_No, document_type, link, document_name, grant_type, document_kind, userName, project_name, null);
        }
        
        /// <remarks/>
        public void FnAttachmentAsync(string user_No, string document_type, string link, string document_name, int grant_type, string document_kind, string userName, string project_name, object userState) {
            if ((this.FnAttachmentOperationCompleted == null)) {
                this.FnAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnAttachmentOperationCompleted);
            }
            this.InvokeAsync("FnAttachment", new object[] {
                        user_No,
                        document_type,
                        link,
                        document_name,
                        grant_type,
                        document_kind,
                        userName,
                        project_name}, this.FnAttachmentOperationCompleted, userState);
        }
        
        private void OnFnAttachmentOperationCompleted(object arg) {
            if ((this.FnAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnGrantManager", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnGrantManager_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnGrantManager(string username, string donor_name, decimal amount_provided, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime year_of_funding, decimal amount_received, string intervention_supported, string project_status, string project_name) {
            this.Invoke("FnGrantManager", new object[] {
                        username,
                        donor_name,
                        amount_provided,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        year_of_funding,
                        amount_received,
                        intervention_supported,
                        project_status,
                        project_name});
        }
        
        /// <remarks/>
        public void FnGrantManagerAsync(string username, string donor_name, decimal amount_provided, System.DateTime year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, System.DateTime year_of_funding, decimal amount_received, string intervention_supported, string project_status, string project_name) {
            this.FnGrantManagerAsync(username, donor_name, amount_provided, year_awarded, grant_objective, target_county, target_beneficiary, target_benefs_number, year_of_funding, amount_received, intervention_supported, project_status, project_name, null);
        }
        
        /// <remarks/>
        public void FnGrantManagerAsync(string username, string donor_name, decimal amount_provided, System.DateTime year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, System.DateTime year_of_funding, decimal amount_received, string intervention_supported, string project_status, string project_name, object userState) {
            if ((this.FnGrantManagerOperationCompleted == null)) {
                this.FnGrantManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGrantManagerOperationCompleted);
            }
            this.InvokeAsync("FnGrantManager", new object[] {
                        username,
                        donor_name,
                        amount_provided,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        year_of_funding,
                        amount_received,
                        intervention_supported,
                        project_status,
                        project_name}, this.FnGrantManagerOperationCompleted, userState);
        }
        
        private void OnFnGrantManagerOperationCompleted(object arg) {
            if ((this.FnGrantManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGrantManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnProjectOverview", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnProjectOverview_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnProjectOverview(string username, string counties, string subcounties, string project_title, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_date, string grant_scale, string project_name) {
            this.Invoke("FnProjectOverview", new object[] {
                        username,
                        counties,
                        subcounties,
                        project_title,
                        target_geog_area,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale,
                        project_name});
        }
        
        /// <remarks/>
        public void FnProjectOverviewAsync(string username, string counties, string subcounties, string project_title, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale, string project_name) {
            this.FnProjectOverviewAsync(username, counties, subcounties, project_title, target_geog_area, project_months, total_project_cost, your_cash_contribution, kcdf_amount_requested, start_date, grant_scale, project_name, null);
        }
        
        /// <remarks/>
        public void FnProjectOverviewAsync(string username, string counties, string subcounties, string project_title, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale, string project_name, object userState) {
            if ((this.FnProjectOverviewOperationCompleted == null)) {
                this.FnProjectOverviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnProjectOverviewOperationCompleted);
            }
            this.InvokeAsync("FnProjectOverview", new object[] {
                        username,
                        counties,
                        subcounties,
                        project_title,
                        target_geog_area,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale,
                        project_name}, this.FnProjectOverviewOperationCompleted, userState);
        }
        
        private void OnFnProjectOverviewOperationCompleted(object arg) {
            if ((this.FnProjectOverviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnProjectOverviewCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteReferee", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteReferee_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteReferee(string username, string no) {
            this.Invoke("FnDeleteReferee", new object[] {
                        username,
                        no});
        }
        
        /// <remarks/>
        public void FnDeleteRefereeAsync(string username, string no) {
            this.FnDeleteRefereeAsync(username, no, null);
        }
        
        /// <remarks/>
        public void FnDeleteRefereeAsync(string username, string no, object userState) {
            if ((this.FnDeleteRefereeOperationCompleted == null)) {
                this.FnDeleteRefereeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteRefereeOperationCompleted);
            }
            this.InvokeAsync("FnDeleteReferee", new object[] {
                        username,
                        no}, this.FnDeleteRefereeOperationCompleted, userState);
        }
        
        private void OnFnDeleteRefereeOperationCompleted(object arg) {
            if ((this.FnDeleteRefereeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteRefereeCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSaveProfP", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSaveProfP_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSaveProfP(string username, string link, string filename) {
            this.Invoke("FnSaveProfP", new object[] {
                        username,
                        link,
                        filename});
        }
        
        /// <remarks/>
        public void FnSaveProfPAsync(string username, string link, string filename) {
            this.FnSaveProfPAsync(username, link, filename, null);
        }
        
        /// <remarks/>
        public void FnSaveProfPAsync(string username, string link, string filename, object userState) {
            if ((this.FnSaveProfPOperationCompleted == null)) {
                this.FnSaveProfPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveProfPOperationCompleted);
            }
            this.InvokeAsync("FnSaveProfP", new object[] {
                        username,
                        link,
                        filename}, this.FnSaveProfPOperationCompleted, userState);
        }
        
        private void OnFnSaveProfPOperationCompleted(object arg) {
            if ((this.FnSaveProfPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveProfPCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteUpload", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteUpload_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteUpload(string iD) {
            this.Invoke("FnDeleteUpload", new object[] {
                        iD});
        }
        
        /// <remarks/>
        public void FnDeleteUploadAsync(string iD) {
            this.FnDeleteUploadAsync(iD, null);
        }
        
        /// <remarks/>
        public void FnDeleteUploadAsync(string iD, object userState) {
            if ((this.FnDeleteUploadOperationCompleted == null)) {
                this.FnDeleteUploadOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteUploadOperationCompleted);
            }
            this.InvokeAsync("FnDeleteUpload", new object[] {
                        iD}, this.FnDeleteUploadOperationCompleted, userState);
        }
        
        private void OnFnDeleteUploadOperationCompleted(object arg) {
            if ((this.FnDeleteUploadCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteUploadCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteGrant", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteGrant_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteGrant(string code) {
            this.Invoke("FnDeleteGrant", new object[] {
                        code});
        }
        
        /// <remarks/>
        public void FnDeleteGrantAsync(string code) {
            this.FnDeleteGrantAsync(code, null);
        }
        
        /// <remarks/>
        public void FnDeleteGrantAsync(string code, object userState) {
            if ((this.FnDeleteGrantOperationCompleted == null)) {
                this.FnDeleteGrantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteGrantOperationCompleted);
            }
            this.InvokeAsync("FnDeleteGrant", new object[] {
                        code}, this.FnDeleteGrantOperationCompleted, userState);
        }
        
        private void OnFnDeleteGrantOperationCompleted(object arg) {
            if ((this.FnDeleteGrantCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteGrantCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDeleteProject", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDeleteProject_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDeleteProject(string code) {
            this.Invoke("FnDeleteProject", new object[] {
                        code});
        }
        
        /// <remarks/>
        public void FnDeleteProjectAsync(string code) {
            this.FnDeleteProjectAsync(code, null);
        }
        
        /// <remarks/>
        public void FnDeleteProjectAsync(string code, object userState) {
            if ((this.FnDeleteProjectOperationCompleted == null)) {
                this.FnDeleteProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDeleteProjectOperationCompleted);
            }
            this.InvokeAsync("FnDeleteProject", new object[] {
                        code}, this.FnDeleteProjectOperationCompleted, userState);
        }
        
        private void OnFnDeleteProjectOperationCompleted(object arg) {
            if ((this.FnDeleteProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDeleteProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnValidateSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnValidateSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnValidateSubmission(string username, string project_number) {
            object[] results = this.Invoke("FnValidateSubmission", new object[] {
                        username,
                        project_number});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnValidateSubmissionAsync(string username, string project_number) {
            this.FnValidateSubmissionAsync(username, project_number, null);
        }
        
        /// <remarks/>
        public void FnValidateSubmissionAsync(string username, string project_number, object userState) {
            if ((this.FnValidateSubmissionOperationCompleted == null)) {
                this.FnValidateSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnValidateSubmissionOperationCompleted);
            }
            this.InvokeAsync("FnValidateSubmission", new object[] {
                        username,
                        project_number}, this.FnValidateSubmissionOperationCompleted, userState);
        }
        
        private void OnFnValidateSubmissionOperationCompleted(object arg) {
            if ((this.FnValidateSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnValidateSubmissionCompleted(this, new FnValidateSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnSaveToGargetGroup", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnSaveToGargetGroup_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnSaveToGargetGroup(
                    string username, 
                    int households, 
                    int schools, 
                    string organization, 
                    int youth, 
                    int women, 
                    int men, 
                    int childold, 
                    int old, 
                    int children, 
                    int orphan, 
                    int illness, 
                    int marginalised, 
                    int drug, 
                    int sexworker, 
                    int teacher, 
                    int farmer, 
                    string project_name) {
            this.Invoke("FnSaveToGargetGroup", new object[] {
                        username,
                        households,
                        schools,
                        organization,
                        youth,
                        women,
                        men,
                        childold,
                        old,
                        children,
                        orphan,
                        illness,
                        marginalised,
                        drug,
                        sexworker,
                        teacher,
                        farmer,
                        project_name});
        }
        
        /// <remarks/>
        public void FnSaveToGargetGroupAsync(
                    string username, 
                    int households, 
                    int schools, 
                    string organization, 
                    int youth, 
                    int women, 
                    int men, 
                    int childold, 
                    int old, 
                    int children, 
                    int orphan, 
                    int illness, 
                    int marginalised, 
                    int drug, 
                    int sexworker, 
                    int teacher, 
                    int farmer, 
                    string project_name) {
            this.FnSaveToGargetGroupAsync(username, households, schools, organization, youth, women, men, childold, old, children, orphan, illness, marginalised, drug, sexworker, teacher, farmer, project_name, null);
        }
        
        /// <remarks/>
        public void FnSaveToGargetGroupAsync(
                    string username, 
                    int households, 
                    int schools, 
                    string organization, 
                    int youth, 
                    int women, 
                    int men, 
                    int childold, 
                    int old, 
                    int children, 
                    int orphan, 
                    int illness, 
                    int marginalised, 
                    int drug, 
                    int sexworker, 
                    int teacher, 
                    int farmer, 
                    string project_name, 
                    object userState) {
            if ((this.FnSaveToGargetGroupOperationCompleted == null)) {
                this.FnSaveToGargetGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSaveToGargetGroupOperationCompleted);
            }
            this.InvokeAsync("FnSaveToGargetGroup", new object[] {
                        username,
                        households,
                        schools,
                        organization,
                        youth,
                        women,
                        men,
                        childold,
                        old,
                        children,
                        orphan,
                        illness,
                        marginalised,
                        drug,
                        sexworker,
                        teacher,
                        farmer,
                        project_name}, this.FnSaveToGargetGroupOperationCompleted, userState);
        }
        
        private void OnFnSaveToGargetGroupOperationCompleted(object arg) {
            if ((this.FnSaveToGargetGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSaveToGargetGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDelSchlSupport", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDelSchlSupport_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDelSchlSupport(string scholarship_Number) {
            this.Invoke("FnDelSchlSupport", new object[] {
                        scholarship_Number});
        }
        
        /// <remarks/>
        public void FnDelSchlSupportAsync(string scholarship_Number) {
            this.FnDelSchlSupportAsync(scholarship_Number, null);
        }
        
        /// <remarks/>
        public void FnDelSchlSupportAsync(string scholarship_Number, object userState) {
            if ((this.FnDelSchlSupportOperationCompleted == null)) {
                this.FnDelSchlSupportOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDelSchlSupportOperationCompleted);
            }
            this.InvokeAsync("FnDelSchlSupport", new object[] {
                        scholarship_Number}, this.FnDelSchlSupportOperationCompleted, userState);
        }
        
        private void OnFnDelSchlSupportOperationCompleted(object arg) {
            if ((this.FnDelSchlSupportCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDelSchlSupportCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnDelWorkplan", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnDelWorkplan_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnDelWorkplan(string workplan_number) {
            this.Invoke("FnDelWorkplan", new object[] {
                        workplan_number});
        }
        
        /// <remarks/>
        public void FnDelWorkplanAsync(string workplan_number) {
            this.FnDelWorkplanAsync(workplan_number, null);
        }
        
        /// <remarks/>
        public void FnDelWorkplanAsync(string workplan_number, object userState) {
            if ((this.FnDelWorkplanOperationCompleted == null)) {
                this.FnDelWorkplanOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnDelWorkplanOperationCompleted);
            }
            this.InvokeAsync("FnDelWorkplan", new object[] {
                        workplan_number}, this.FnDelWorkplanOperationCompleted, userState);
        }
        
        private void OnFnDelWorkplanOperationCompleted(object arg) {
            if ((this.FnDelWorkplanCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnDelWorkplanCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditProject", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditProject_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEditProject(string project_number, string counties, string subcounties, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime start_date, string grant_scale) {
            this.Invoke("FnEditProject", new object[] {
                        project_number,
                        counties,
                        subcounties,
                        target_geog_area,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale});
        }
        
        /// <remarks/>
        public void FnEditProjectAsync(string project_number, string counties, string subcounties, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale) {
            this.FnEditProjectAsync(project_number, counties, subcounties, target_geog_area, project_months, total_project_cost, your_cash_contribution, kcdf_amount_requested, start_date, grant_scale, null);
        }
        
        /// <remarks/>
        public void FnEditProjectAsync(string project_number, string counties, string subcounties, string target_geog_area, int project_months, decimal total_project_cost, decimal your_cash_contribution, decimal kcdf_amount_requested, System.DateTime start_date, string grant_scale, object userState) {
            if ((this.FnEditProjectOperationCompleted == null)) {
                this.FnEditProjectOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditProjectOperationCompleted);
            }
            this.InvokeAsync("FnEditProject", new object[] {
                        project_number,
                        counties,
                        subcounties,
                        target_geog_area,
                        project_months,
                        total_project_cost,
                        your_cash_contribution,
                        kcdf_amount_requested,
                        start_date,
                        grant_scale}, this.FnEditProjectOperationCompleted, userState);
        }
        
        private void OnFnEditProjectOperationCompleted(object arg) {
            if ((this.FnEditProjectCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditProjectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnEditGrantManager", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnEditGrantManager_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnEditGrantManager(string project_number, string username, string donor_name, decimal amount_provided, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime year_of_funding, decimal amount_received, string intervention_supported, string project_status, string project_name) {
            this.Invoke("FnEditGrantManager", new object[] {
                        project_number,
                        username,
                        donor_name,
                        amount_provided,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        year_of_funding,
                        amount_received,
                        intervention_supported,
                        project_status,
                        project_name});
        }
        
        /// <remarks/>
        public void FnEditGrantManagerAsync(string project_number, string username, string donor_name, decimal amount_provided, System.DateTime year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, System.DateTime year_of_funding, decimal amount_received, string intervention_supported, string project_status, string project_name) {
            this.FnEditGrantManagerAsync(project_number, username, donor_name, amount_provided, year_awarded, grant_objective, target_county, target_beneficiary, target_benefs_number, year_of_funding, amount_received, intervention_supported, project_status, project_name, null);
        }
        
        /// <remarks/>
        public void FnEditGrantManagerAsync(string project_number, string username, string donor_name, decimal amount_provided, System.DateTime year_awarded, string grant_objective, string target_county, string target_beneficiary, int target_benefs_number, System.DateTime year_of_funding, decimal amount_received, string intervention_supported, string project_status, string project_name, object userState) {
            if ((this.FnEditGrantManagerOperationCompleted == null)) {
                this.FnEditGrantManagerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnEditGrantManagerOperationCompleted);
            }
            this.InvokeAsync("FnEditGrantManager", new object[] {
                        project_number,
                        username,
                        donor_name,
                        amount_provided,
                        year_awarded,
                        grant_objective,
                        target_county,
                        target_beneficiary,
                        target_benefs_number,
                        year_of_funding,
                        amount_received,
                        intervention_supported,
                        project_status,
                        project_name}, this.FnEditGrantManagerOperationCompleted, userState);
        }
        
        private void OnFnEditGrantManagerOperationCompleted(object arg) {
            if ((this.FnEditGrantManagerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnEditGrantManagerCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnFinalSubmission", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnFinalSubmission_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnFinalSubmission(string username, string project_name) {
            object[] results = this.Invoke("FnFinalSubmission", new object[] {
                        username,
                        project_name});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnFinalSubmissionAsync(string username, string project_name) {
            this.FnFinalSubmissionAsync(username, project_name, null);
        }
        
        /// <remarks/>
        public void FnFinalSubmissionAsync(string username, string project_name, object userState) {
            if ((this.FnFinalSubmissionOperationCompleted == null)) {
                this.FnFinalSubmissionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFinalSubmissionOperationCompleted);
            }
            this.InvokeAsync("FnFinalSubmission", new object[] {
                        username,
                        project_name}, this.FnFinalSubmissionOperationCompleted, userState);
        }
        
        private void OnFnFinalSubmissionOperationCompleted(object arg) {
            if ((this.FnFinalSubmissionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFinalSubmissionCompleted(this, new FnFinalSubmissionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/Portals:FnChangeSubmitStatus", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", ResponseElementName="FnChangeSubmitStatus_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/Portals", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnChangeSubmitStatus(string projectNo) {
            this.Invoke("FnChangeSubmitStatus", new object[] {
                        projectNo});
        }
        
        /// <remarks/>
        public void FnChangeSubmitStatusAsync(string projectNo) {
            this.FnChangeSubmitStatusAsync(projectNo, null);
        }
        
        /// <remarks/>
        public void FnChangeSubmitStatusAsync(string projectNo, object userState) {
            if ((this.FnChangeSubmitStatusOperationCompleted == null)) {
                this.FnChangeSubmitStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnChangeSubmitStatusOperationCompleted);
            }
            this.InvokeAsync("FnChangeSubmitStatus", new object[] {
                        projectNo}, this.FnChangeSubmitStatusOperationCompleted, userState);
        }
        
        private void OnFnChangeSubmitStatusOperationCompleted(object arg) {
            if ((this.FnChangeSubmitStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnChangeSubmitStatusCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnActivateAcCompletedEventHandler(object sender, FnActivateAcCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnActivateAcCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnActivateAcCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnRegisterStudentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnCreateAccountCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEducatBgCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddRefereeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddScholasticSupportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddWorkplanItemCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAddGranteeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnActivateGranteeCompletedEventHandler(object sender, FnActivateGranteeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnActivateGranteeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnActivateGranteeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnRegGranteeInfoCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnGrantManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnProjectOverviewCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteRefereeCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSaveProfPCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteUploadCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteGrantCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDeleteProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnValidateSubmissionCompletedEventHandler(object sender, FnValidateSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnValidateSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnValidateSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnSaveToGargetGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDelSchlSupportCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnDelWorkplanCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEditProjectCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnEditGrantManagerCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnFinalSubmissionCompletedEventHandler(object sender, FnFinalSubmissionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFinalSubmissionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFinalSubmissionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2556.0")]
    public delegate void FnChangeSubmitStatusCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591